;****************************************************************************
;*
;*						  Techniques Class Library
;*
;*               Copyright (C) 1991-1997 SciTech Software, Inc.
;*                            All rights reserved.
;*
;*  ======================================================================
;*       This library is free software; you can use it and/or
;*       modify it under the terms of the SciTech MGL Software License.
;*
;*       This library is distributed in the hope that it will be useful,
;*       but WITHOUT ANY WARRANTY; without even the implied warranty of
;*       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;*       SciTech MGL Software License for more details.
;*  ======================================================================
;*
;* Filename:	$Workfile:   flmacs.mac  $
;* Version:		$Revision:   1.1  $
;*
;* Language:	80387 Assembler
;* Environment:	IBM PC (MS DOS)
;*
;* Description:	Macros used by the floating point assembler routines.
;*
;* $Date:   01 Oct 1997 05:37:58  $ $Author:   KendallB  $
;*
;****************************************************************************

; Define a macro to return the value stored in ST(0). If FPU_REG_RTN is
; on, then we need to copy it onto the CPU stack and return it in the
; CPU registers, otherwise we simply leave it intact on the FPU stack.

MACRO	RETURN	tmp
ifdef	FPU_REG_RTN
		fstp	[tmp]				; Store in temporary
ifdef	DOUBLE
if flatmodel
		mov		eax,[DWORD tmp]
		mov		edx,[DWORD tmp+4]	; EAX := return value
else
		mov     dx,[WORD tmp]
		mov		cx,[WORD tmp+2]
		mov		bx,[WORD tmp+4]
		mov		ax,[WORD tmp+6]		; AX:BX:CX:DX := return value
endif
else
if flatmodel
		mov		eax,[tmp]			; EAX := return value
else
		mov     ax,[WORD tmp]
		mov		dx,[WORD tmp+2]		; DX:AX := return value
endif
endif
endif
ENDM
