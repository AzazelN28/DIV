.387
.386p
.model flat
		PUBLIC	judas_get_ds_
		PUBLIC	judas_code_lock_start_
		PUBLIC	dma_program_
		PUBLIC	sb_handler_
		PUBLIC	sb_aihandler_
		PUBLIC	sb16_handler_
		PUBLIC	gus_handler_
		PUBLIC	gus_peek_
		PUBLIC	gus_poke_
		PUBLIC	gus_startchannels_
		PUBLIC	gus_dmaprogram_
		PUBLIC	gus_dmainit_
		PUBLIC	gus_dmawait_
		PUBLIC	judas_update_
		PUBLIC	fmixer_
		PUBLIC	normalmix_
		PUBLIC	ipmix_
		PUBLIC	qmixer_
		PUBLIC	qmix_cubic_
		PUBLIC	qmix_linear_
		PUBLIC	safemixer_
		PUBLIC	judas_code_lock_end_
		EXTRN	_judas_ds:BYTE
		EXTRN	_judas_dma:BYTE
		EXTRN	_dma_address:BYTE
		EXTRN	_judas_bufferlength:BYTE
		EXTRN	_judas_irqcount:BYTE
		EXTRN	_judas_irq:BYTE
		EXTRN	_judas_port:BYTE
		EXTRN	_judas_mixmode:BYTE
		EXTRN	_judas_device:BYTE
		EXTRN	_judas_initialized:BYTE
		EXTRN	_judas_buffermask:BYTE
		EXTRN	_judas_mixpos:BYTE
		EXTRN	_judas_mixersys:BYTE
		EXTRN	_reloj:BYTE
		EXTRN	_ticks:BYTE
		EXTRN	_judas_clipbuffer:BYTE
		EXTRN	_judas_player:BYTE
		EXTRN	_judas_mixroutine:BYTE
		EXTRN	_judas_bpmcount:BYTE
		EXTRN	_judas_mixrate:BYTE
		EXTRN	_judas_bpmtempo:BYTE
		EXTRN	_judas_cliptable:BYTE
		EXTRN	_judas_channel:BYTE
		EXTRN	_judas_volumetable:BYTE
		EXTRN	_judas_zladdbuffer:BYTE
		EXTRN	_judas_zerolevell:BYTE
		EXTRN	_judas_zerolevelr:BYTE
		EXTRN	_judas_clipped:BYTE
		EXTRN	_judas_samplesize:BYTE
DGROUP		GROUP	CONST,_DATA
_TEXT		SEGMENT	DWORD PUBLIC USE32 'CODE'
		ASSUME CS:_TEXT, DS:DGROUP, SS:DGROUP
judas_get_ds_:
    mov         ax,ds 
    mov         word ptr FLAT:_judas_ds,ax 
    ret         
judas_code_lock_start_:
    xchg        ebx,ebx 
dma_program_:
    push        esi 
    push        edi 
    push        ecx 
    mov         ecx,eax 
    mov         edi,edx 
    mov         esi,dword ptr FLAT:_judas_dma 
    cmp         esi,4 
    jae         L$1 
    shl         esi,4 
    add         esi,offset FLAT:L$640 
    mov         dx,word ptr 6[esi] 
    mov         al,byte ptr 0cH[esi] 
    out         dx,al 
    xor         al,al 
    mov         dx,word ptr 0aH[esi] 
    out         dx,al 
    mov         dx,word ptr 8[esi] 
    mov         al,cl 
    or          al,byte ptr 0dH[esi] 
    out         dx,al 
    mov         dx,word ptr 4[esi] 
    dec         ebx 
    mov         al,bl 
    out         dx,al 
    mov         al,bh 
    out         dx,al 
    mov         dx,word ptr 2[esi] 
    mov         ebx,dword ptr FLAT:_dma_address 
    add         ebx,edi 
    mov         al,bl 
    out         dx,al 
    mov         al,bh 
    out         dx,al 
    mov         dx,word ptr [esi] 
    shr         ebx,10H 
    mov         al,bl 
    out         dx,al 
    mov         dx,word ptr 6[esi] 
    mov         al,byte ptr 0dH[esi] 
    out         dx,al 
    pop         ecx 
    pop         edi 
    pop         esi 
    ret         
L$1:
    shl         esi,4 
    add         esi,offset FLAT:L$640 
    mov         dx,word ptr 6[esi] 
    mov         al,byte ptr 0cH[esi] 
    out         dx,al 
    xor         al,al 
    mov         dx,word ptr 0aH[esi] 
    out         dx,al 
    mov         dx,word ptr 8[esi] 
    mov         al,cl 
    or          al,byte ptr 0dH[esi] 
    out         dx,al 
    mov         dx,word ptr 4[esi] 
    shr         ebx,1 
    dec         ebx 
    mov         al,bl 
    out         dx,al 
    mov         al,bh 
    out         dx,al 
    mov         dx,word ptr 2[esi] 
    mov         ebx,dword ptr FLAT:_dma_address 
    add         ebx,edi 
    shr         ebx,1 
    mov         al,bl 
    out         dx,al 
    mov         al,bh 
    out         dx,al 
    mov         dx,word ptr [esi] 
    shr         ebx,0fH 
    mov         al,bl 
    out         dx,al 
    mov         dx,word ptr 6[esi] 
    mov         al,byte ptr 0dH[esi] 
    out         dx,al 
    pop         ecx 
    pop         edi 
    pop         esi 
    ret         
L$2:
    cli         
    push        ebx 
    push        ecx 
    push        edx 
    push        esi 
    mov         esi,dword ptr FLAT:_judas_dma 
    cmp         esi,4 
    jae         L$4 
    shl         esi,4 
    add         esi,offset FLAT:L$640 
    xor         eax,eax 
    mov         dx,word ptr 0aH[esi] 
    out         dx,al 
    mov         dx,word ptr 2[esi] 
L$3:
    xor         eax,eax 
    in          al,dx 
    xchg        ah,al 
    in          al,dx 
    xchg        ah,al 
    sub         ax,word ptr FLAT:_dma_address 
    mov         ebx,eax 
    in          al,dx 
    xchg        ah,al 
    in          al,dx 
    xchg        ah,al 
    sub         ax,word ptr FLAT:_dma_address 
    mov         ecx,eax 
    cmp         ebx,dword ptr FLAT:_judas_bufferlength 
    jae         L$3 
    mov         eax,ebx 
    sub         eax,ecx 
    cmp         eax,40H 
    jg          L$3 
    cmp         eax,0ffffffc0H 
    jl          L$3 
    mov         eax,ebx 
    pop         esi 
    pop         edx 
    pop         ecx 
    pop         ebx 
    sti         
    ret         
L$4:
    shl         esi,4 
    add         esi,offset FLAT:L$640 
    mov         dx,word ptr 0aH[esi] 
    xor         eax,eax 
    out         dx,al 
    mov         dx,word ptr 2[esi] 
    mov         esi,dword ptr FLAT:_dma_address 
    and         esi,1ffffH 
L$5:
    xor         eax,eax 
    in          al,dx 
    xchg        ah,al 
    in          al,dx 
    xchg        ah,al 
    shl         eax,1 
    sub         eax,esi 
    mov         ebx,eax 
    xor         eax,eax 
    in          al,dx 
    xchg        ah,al 
    in          al,dx 
    xchg        ah,al 
    shl         eax,1 
    sub         eax,esi 
    mov         ecx,eax 
    cmp         ebx,dword ptr FLAT:_judas_bufferlength 
    jae         L$5 
    mov         eax,ebx 
    sub         eax,ecx 
    cmp         eax,40H 
    jg          L$5 
    cmp         eax,0ffffffc0H 
    jl          L$5 
    mov         eax,ebx 
    pop         esi 
    pop         edx 
    pop         ecx 
    pop         ebx 
    sti         
    ret         
L$6:
    inc         dword ptr FLAT:_judas_irqcount 
    cmp         dword ptr FLAT:_judas_irq,8 
    jae         L$7 
    mov         al,20H 
    out         20H,al 
    ret         
L$7:
    mov         al,20H 
    out         0a0H,al 
    mov         al,0bH 
    out         0a0H,al 
    in          al,0a0H 
    or          al,al 
    jne         L$8 
    mov         al,20H 
    out         20H,al 
L$8:
    ret         
sb_handler_:
    pushad      
    push        ds 
    mov         ax,word ptr cs:_judas_ds 
    mov         ds,eax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,0eH 
    in          al,dx 
    sub         edx,2 
L$9:
    in          al,dx 
    or          al,al 
    js          L$9 
    mov         al,14H 
    out         dx,al 
L$10:
    in          al,dx 
    or          al,al 
    js          L$10 
    mov         ax,0fff0H 
    out         dx,al 
L$11:
    in          al,dx 
    or          al,al 
    js          L$11 
    mov         al,ah 
    out         dx,al 
    sti         
    call        near ptr L$6 
    pop         ds 
    popad       
    iretd       
sb_aihandler_:
    pushad      
    push        ds 
    mov         ax,word ptr cs:_judas_ds 
    mov         ds,eax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,0eH 
    in          al,dx 
    sti         
    call        near ptr L$6 
    pop         ds 
    popad       
    iretd       
sb16_handler_:
    pushad      
    push        ds 
    mov         ax,word ptr cs:_judas_ds 
    mov         ds,eax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,0fH 
    in          al,dx 
    sti         
    call        near ptr L$6 
    pop         ds 
    popad       
    iretd       
gus_handler_:
    pushad      
    push        ds 
    mov         ax,word ptr cs:_judas_ds 
    mov         ds,eax 
L$12:
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,6 
    in          al,dx 
    test        al,80H 
    je          L$17 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,41H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    in          al,dx 
    dec         byte ptr FLAT:L$639 
    mov         esi,offset FLAT:L$617 
    mov         ecx,10H 
L$13:
    cmp         dword ptr 4[esi],0 
    jne         L$14 
    add         esi,8 
    dec         ecx 
    jne         L$13 
    jmp         L$12 
L$14:
    mov         ebx,dword ptr [esi] 
    shr         ebx,4 
    mov         cl,0a1H 
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$15 
    mov         cl,61H 
L$15:
    cmp         dword ptr FLAT:_judas_dma,4 
    jb          L$16 
    or          cl,4 
    shr         ebx,1 
L$16:
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,42H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    mov         ax,bx 
    out         dx,ax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,41H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    mov         al,cl 
    out         dx,al 
    mov         ebx,dword ptr 4[esi] 
    mov         dword ptr 4[esi],0 
    mov         edx,dword ptr [esi] 
    mov         eax,48H 
    call        near ptr dma_program_ 
    jmp         near ptr L$12 
L$17:
    sti         
    call        near ptr L$6 
    pop         ds 
    popad       
    iretd       
gus_peek_:
    push        ebx 
    mov         ebx,eax 
    mov         al,43H 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    out         dx,al 
    mov         ax,bx 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    out         dx,ax 
    mov         al,44H 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    out         dx,al 
    shr         ebx,10H 
    mov         al,bl 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,107H 
    in          al,dx 
    pop         ebx 
    ret         
gus_poke_:
    push        ebx 
    push        edx 
    mov         ebx,eax 
    mov         al,43H 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    out         dx,al 
    mov         ax,bx 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    out         dx,ax 
    mov         al,44H 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    out         dx,al 
    shr         ebx,10H 
    mov         al,bl 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,107H 
    pop         eax 
    out         dx,al 
    pop         ebx 
    ret         
gus_startchannels_:
    push        ebx 
    push        ecx 
    push        edx 
    mov         ebx,dword ptr FLAT:_judas_port 
    add         ebx,102H 
    mov         ecx,dword ptr FLAT:_judas_port 
    add         ecx,105H 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,0 
    out         dx,al 
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$18 
    mov         edx,ebx 
    mov         al,0 
    out         dx,al 
    mov         edx,ecx 
    mov         al,0cH 
    out         dx,al 
    mov         edx,ebx 
    mov         al,1 
    out         dx,al 
    mov         edx,ecx 
    mov         al,0cH 
    out         dx,al 
    pop         edx 
    pop         ecx 
    pop         ebx 
    ret         
L$18:
    mov         edx,ebx 
    xor         al,al 
    out         dx,al 
    mov         edx,ecx 
    mov         al,8 
    out         dx,al 
    mov         edx,ebx 
    mov         al,1 
    out         dx,al 
    mov         edx,ecx 
    mov         al,8 
    out         dx,al 
    pop         edx 
    pop         ecx 
    pop         ebx 
    ret         
gus_dmaprogram_:
    or          edx,edx 
    je          L$20 
    pushad      
    cli         
    cmp         byte ptr FLAT:L$639,0 
    je          L$22 
    mov         ebx,offset FLAT:L$617 
    mov         ecx,10H 
L$19:
    cmp         dword ptr 4[ebx],0 
    je          L$21 
    add         ebx,8 
    dec         ecx 
    jne         L$19 
    sti         
    popad       
L$20:
    ret         
L$21:
    mov         dword ptr [ebx],eax 
    mov         dword ptr 4[ebx],edx 
    inc         byte ptr FLAT:L$639 
    sti         
    popad       
    ret         
L$22:
    sti         
    inc         byte ptr FLAT:L$639 
    mov         esi,eax 
    mov         edi,edx 
    mov         ebx,esi 
    shr         ebx,4 
    mov         cl,0a1H 
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$23 
    mov         cl,61H 
L$23:
    cmp         dword ptr FLAT:_judas_dma,4 
    jb          L$24 
    or          cl,4 
    shr         ebx,1 
L$24:
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,42H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    mov         eax,ebx 
    out         dx,ax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,41H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    mov         al,cl 
    out         dx,al 
    mov         ebx,edi 
    mov         edx,esi 
    mov         eax,48H 
    call        near ptr dma_program_ 
    popad       
    ret         
gus_dmainit_:
    cli         
    mov         byte ptr FLAT:L$639,0 
    push        eax 
    push        edx 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,41H 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,105H 
    in          al,dx 
    mov         eax,offset FLAT:L$617 
L$25:
    mov         dword ptr [eax],0 
    mov         dword ptr 4[eax],0 
    add         eax,8 
    cmp         eax,offset FLAT:L$618 
    jne         L$25 
    pop         edx 
    pop         eax 
    sti         
    ret         
gus_dmawait_:
    mov         eax,200000H 
L$26:
    cmp         byte ptr FLAT:L$639,0 
    je          L$27 
    dec         eax 
    jne         L$26 
L$27:
    ret         
L$28:
    push        ebx 
    push        edx 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,102H 
    xor         al,al 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,8aH 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    in          ax,dx 
    and         eax,1fffH 
    shl         eax,7 
    mov         ebx,eax 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,103H 
    mov         al,8bH 
    out         dx,al 
    mov         edx,dword ptr FLAT:_judas_port 
    add         edx,104H 
    in          ax,dx 
    shr         ax,9 
    or          eax,ebx 
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$29 
    shl         eax,1 
L$29:
    pop         edx 
    pop         ebx 
    ret         
judas_update_:
    cmp         dword ptr FLAT:_judas_device,0 
    je          L$31 
    cmp         dword ptr FLAT:_judas_device,5 
    je          L$31 
    cmp         byte ptr FLAT:L$638,0 
    jne         L$31 
    cmp         byte ptr FLAT:_judas_initialized,0 
    je          L$31 
    inc         byte ptr FLAT:L$638 
    pushad      
    cmp         dword ptr FLAT:_judas_device,4 
    je          L$33 
    call        near ptr L$2 
    and         eax,dword ptr FLAT:_judas_buffermask 
    mov         ebx,dword ptr FLAT:_judas_mixpos 
    cmp         eax,ebx 
    je          L$30 
    jb          L$32 
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         edx,eax 
    sub         edx,ebx 
    mov         eax,ebx 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
L$30:
    popad       
    dec         byte ptr FLAT:L$638 
L$31:
    inc         dword ptr FLAT:_reloj 
    add         dword ptr FLAT:_ticks,2eH 
    ret         
L$32:
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         eax,ebx 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    sub         edx,ebx 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
    mov         eax,dword ptr FLAT:_dma_address 
    mov         edx,dword ptr FLAT:_judas_mixpos 
    or          edx,edx 
    je          L$30 
    call        dword ptr FLAT:_judas_mixersys 
    jmp         L$30 
L$33:
    cmp         byte ptr FLAT:L$639,0cH 
    jb          L$34 
    call        near ptr gus_dmainit_ 
L$34:
    cli         
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$37 
    xor         eax,eax 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    shr         eax,1 
    call        near ptr gus_poke_ 
    mov         eax,1 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    shr         eax,1 
    inc         eax 
    call        near ptr gus_poke_ 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    shr         eax,1 
    add         eax,20H 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    add         eax,20H 
    call        near ptr gus_poke_ 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    shr         eax,1 
    add         eax,21H 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    add         eax,21H 
    call        near ptr gus_poke_ 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
L$35:
    call        near ptr L$28 
    mov         ebx,eax 
    call        near ptr L$28 
    mov         ecx,eax 
    cmp         ebx,edx 
    jae         L$35 
    mov         eax,ebx 
    sub         eax,ecx 
    cmp         eax,40H 
    jg          L$35 
    cmp         eax,0ffffffc0H 
    jl          L$35 
    mov         eax,ebx 
    sti         
    and         eax,dword ptr FLAT:_judas_buffermask 
    mov         ebx,dword ptr FLAT:_judas_mixpos 
    cmp         eax,ebx 
    je          L$30 
    jb          L$36 
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         edx,eax 
    sub         edx,ebx 
    mov         eax,ebx 
    push        eax 
    push        edx 
    shl         edx,1 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
    pop         edx 
    pop         eax 
    call        near ptr gus_dmaprogram_ 
    add         eax,20H 
    mov         ebx,dword ptr FLAT:_judas_bufferlength 
    shr         ebx,1 
    add         eax,ebx 
    call        near ptr gus_dmaprogram_ 
    jmp         near ptr L$30 
L$36:
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         eax,ebx 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
    sub         edx,ebx 
    push        eax 
    push        edx 
    shl         edx,1 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
    mov         eax,dword ptr FLAT:_dma_address 
    mov         edx,dword ptr FLAT:_judas_mixpos 
    shl         edx,1 
    call        dword ptr FLAT:_judas_mixersys 
    pop         edx 
    pop         eax 
    call        near ptr gus_dmaprogram_ 
    add         eax,20H 
    mov         ebx,dword ptr FLAT:_judas_bufferlength 
    shr         ebx,1 
    add         eax,ebx 
    call        near ptr gus_dmaprogram_ 
    xor         eax,eax 
    mov         edx,dword ptr FLAT:_judas_mixpos 
    call        near ptr gus_dmaprogram_ 
    add         eax,20H 
    mov         ebx,dword ptr FLAT:_judas_bufferlength 
    shr         ebx,1 
    add         eax,ebx 
    call        near ptr gus_dmaprogram_ 
    jmp         near ptr L$30 
L$37:
    xor         eax,eax 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    call        near ptr gus_poke_ 
    mov         eax,1 
    call        near ptr gus_peek_ 
    mov         dl,al 
    mov         eax,dword ptr FLAT:_judas_bufferlength 
    inc         eax 
    call        near ptr gus_poke_ 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
L$38:
    call        near ptr L$28 
    mov         ebx,eax 
    call        near ptr L$28 
    mov         ecx,eax 
    cmp         ebx,edx 
    jae         L$38 
    mov         eax,ebx 
    sub         eax,ecx 
    cmp         eax,40H 
    jg          L$38 
    cmp         eax,0ffffffc0H 
    jl          L$38 
    mov         eax,ebx 
    sti         
    and         eax,dword ptr FLAT:_judas_buffermask 
    mov         ebx,dword ptr FLAT:_judas_mixpos 
    cmp         eax,ebx 
    je          L$30 
    jb          L$39 
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         edx,eax 
    sub         edx,ebx 
    mov         eax,ebx 
    push        eax 
    push        edx 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
    pop         edx 
    pop         eax 
    call        near ptr gus_dmaprogram_ 
    jmp         near ptr L$30 
L$39:
    mov         dword ptr FLAT:_judas_mixpos,eax 
    mov         eax,ebx 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    sub         edx,ebx 
    push        eax 
    push        edx 
    add         eax,dword ptr FLAT:_dma_address 
    call        dword ptr FLAT:_judas_mixersys 
    mov         eax,dword ptr FLAT:_dma_address 
    mov         edx,dword ptr FLAT:_judas_mixpos 
    call        dword ptr FLAT:_judas_mixersys 
    pop         edx 
    pop         eax 
    call        near ptr gus_dmaprogram_ 
    xor         eax,eax 
    mov         edx,dword ptr FLAT:_judas_mixpos 
    call        near ptr gus_dmaprogram_ 
    jmp         near ptr L$30 
    xchg        ebx,ebx 
fmixer_:
    or          edx,edx 
    je          L$51 
    mov         ecx,edx 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$40 
    shr         edx,1 
L$40:
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$41 
    shr         edx,1 
    shr         ecx,1 
L$41:
    mov         dword ptr FLAT:L$624,edx 
    mov         dword ptr FLAT:L$625,edx 
    mov         dword ptr FLAT:L$629,eax 
    shr         ecx,3 
    mov         dword ptr FLAT:L$626,ecx 
    mov         edi,dword ptr FLAT:_judas_clipbuffer 
    mov         dword ptr FLAT:L$628,edi 
    xor         eax,eax 
L$42:
    mov         dword ptr [edi],eax 
    mov         dword ptr 4[edi],eax 
    mov         dword ptr 8[edi],eax 
    mov         dword ptr 0cH[edi],eax 
    mov         dword ptr 10H[edi],eax 
    mov         dword ptr 14H[edi],eax 
    mov         dword ptr 18H[edi],eax 
    mov         dword ptr 1cH[edi],eax 
    add         edi,20H 
    dec         ecx 
    jne         L$42 
    cmp         dword ptr FLAT:_judas_player,0 
    jne         L$43 
    call        dword ptr FLAT:_judas_mixroutine 
    jmp         L$48 
L$43:
    cmp         dword ptr FLAT:_judas_bpmcount,0 
    jne         L$45 
    cmp         dword ptr FLAT:_judas_player,0 
    je          L$44 
    call        dword ptr FLAT:_judas_player 
L$44:
    mov         eax,dword ptr FLAT:_judas_mixrate 
    mov         ebx,5 
    mul         ebx 
    shr         eax,1 
    xor         edx,edx 
    movzx       ebx,byte ptr FLAT:_judas_bpmtempo 
    div         ebx 
    mov         dword ptr FLAT:_judas_bpmcount,eax 
L$45:
    mov         eax,dword ptr FLAT:L$625 
    cmp         eax,dword ptr FLAT:_judas_bpmcount 
    jbe         L$46 
    mov         eax,dword ptr FLAT:_judas_bpmcount 
L$46:
    mov         dword ptr FLAT:L$624,eax 
    call        dword ptr FLAT:_judas_mixroutine 
    mov         eax,dword ptr FLAT:L$624 
    sub         dword ptr FLAT:_judas_bpmcount,eax 
    mov         ebx,eax 
    shl         ebx,2 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$47 
    shl         ebx,1 
L$47:
    add         dword ptr FLAT:L$628,ebx 
    sub         dword ptr FLAT:L$625,eax 
    jne         L$43 
L$48:
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$52 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$49 
    cmp         dword ptr FLAT:_judas_device,4 
    je          L$55 
L$49:
    mov         edi,dword ptr FLAT:L$629 
    mov         ebx,dword ptr FLAT:L$626 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ecx,dword ptr FLAT:_judas_cliptable 
    xor         eax,eax 
L$50:
    mov         ax,word ptr [esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr [edi],ax 
    mov         ax,word ptr 4[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 2[edi],ax 
    mov         ax,word ptr 8[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 4[edi],ax 
    mov         ax,word ptr 0cH[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 6[edi],ax 
    mov         ax,word ptr 10H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 8[edi],ax 
    mov         ax,word ptr 14H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 0aH[edi],ax 
    mov         ax,word ptr 18H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 0cH[edi],ax 
    mov         ax,word ptr 1cH[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 0eH[edi],ax 
    add         esi,20H 
    add         edi,10H 
    dec         ebx 
    jne         L$50 
L$51:
    ret         
L$52:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$53 
    cmp         dword ptr FLAT:_judas_device,4 
    je          L$57 
L$53:
    mov         edi,dword ptr FLAT:L$629 
    mov         ebx,dword ptr FLAT:L$626 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ecx,dword ptr FLAT:_judas_cliptable 
    xor         eax,eax 
L$54:
    mov         ax,word ptr [esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr [edi],al 
    mov         ax,word ptr 4[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 1[edi],al 
    mov         ax,word ptr 8[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 2[edi],al 
    mov         ax,word ptr 0cH[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 3[edi],al 
    mov         ax,word ptr 10H[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 4[edi],al 
    mov         ax,word ptr 14H[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 5[edi],al 
    mov         ax,word ptr 18H[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 6[edi],al 
    mov         ax,word ptr 1cH[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         byte ptr 7[edi],al 
    add         esi,20H 
    add         edi,8 
    dec         ebx 
    jne         L$54 
    jmp         near ptr L$51 
L$55:
    mov         edi,dword ptr FLAT:L$629 
    mov         ebx,dword ptr FLAT:L$626 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
    add         edx,edi 
    add         edx,20H 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ecx,dword ptr FLAT:_judas_cliptable 
    xor         eax,eax 
L$56:
    mov         ax,word ptr [esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr [edi],ax 
    mov         ax,word ptr 4[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr [edx],ax 
    mov         ax,word ptr 8[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 2[edi],ax 
    mov         ax,word ptr 0cH[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 2[edx],ax 
    mov         ax,word ptr 10H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 4[edi],ax 
    mov         ax,word ptr 14H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 4[edx],ax 
    mov         ax,word ptr 18H[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 6[edi],ax 
    mov         ax,word ptr 1cH[esi] 
    mov         ax,word ptr [ecx+eax*2] 
    mov         word ptr 6[edx],ax 
    add         esi,20H 
    add         edi,8 
    add         edx,8 
    dec         ebx 
    jne         L$56 
    jmp         near ptr L$51 
L$57:
    mov         edi,dword ptr FLAT:L$629 
    mov         ebx,dword ptr FLAT:L$626 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
    add         edx,edi 
    add         edx,20H 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ecx,dword ptr FLAT:_judas_cliptable 
    xor         eax,eax 
L$58:
    mov         ax,word ptr [esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr [edi],ax 
    mov         ax,word ptr 4[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr [edx],ax 
    mov         ax,word ptr 8[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr 1[edi],ax 
    mov         ax,word ptr 0cH[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr 1[edx],ax 
    mov         ax,word ptr 10H[esi] 
    mov         ax,word ptr [ecx+eax] 
    mov         word ptr 2[edi],ax 
    mov         ax,word ptr 14H[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr 2[edx],ax 
    mov         ax,word ptr 18H[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr 3[edi],ax 
    mov         ax,word ptr 1cH[esi] 
    mov         al,byte ptr [ecx+eax] 
    mov         word ptr 3[edx],ax 
    add         esi,20H 
    add         edi,4 
    add         edx,4 
    dec         ebx 
    jne         L$58 
    jmp         near ptr L$51 
normalmix_:
    mov         dword ptr FLAT:L$627,offset FLAT:_judas_channel 
L$59:
    call        near ptr L$61 
    add         dword ptr FLAT:L$627,30H 
    cmp         dword ptr FLAT:L$627,offset FLAT:_judas_channel+600H 
    jne         L$59 
    ret         
ipmix_:
    mov         dword ptr FLAT:L$627,offset FLAT:_judas_channel 
L$60:
    call        near ptr L$285 
    add         dword ptr FLAT:L$627,30H 
    cmp         dword ptr FLAT:L$627,offset FLAT:_judas_channel+600H 
    jne         L$60 
    ret         
L$61:
    mov         esi,dword ptr FLAT:L$627 
    test        byte ptr 1aH[esi],1 
    je          L$173 
    mov         eax,dword ptr 10H[esi] 
    cmp         eax,82ac0H 
    jbe         L$62 
    mov         eax,82ac0H 
L$62:
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    mov         word ptr FLAT:L$620,ax 
    shr         eax,10H 
    mov         dword ptr FLAT:L$621,eax 
    test        byte ptr 1aH[esi],4 
    jne         L$174 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$151 
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$63 
    mov         eax,4000H 
L$63:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    cmp         byte ptr 17H[esi],0 
    jne         L$85 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$64 
    mov         ebx,0ffH 
L$64:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         ecx,dword ptr FLAT:L$619 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$84 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$65:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$66:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$67:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$68:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$69:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$70:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$71:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$72:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$73:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
L$74:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
L$75:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
L$76:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
L$77:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
L$78:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
L$79:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
L$80:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$81 
    dec         dword ptr FLAT:L$618 
    jne         L$65 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$81:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$83 
L$82:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$82 
    dec         dword ptr FLAT:L$618 
    jne         L$65 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$83:
    mov         byte ptr 1aH[eax],0 
    ret         
L$84:
    DD	offset FLAT:L$65
    DD	offset FLAT:L$66
    DD	offset FLAT:L$67
    DD	offset FLAT:L$68
    DD	offset FLAT:L$69
    DD	offset FLAT:L$70
    DD	offset FLAT:L$71
    DD	offset FLAT:L$72
    DD	offset FLAT:L$73
    DD	offset FLAT:L$74
    DD	offset FLAT:L$75
    DD	offset FLAT:L$76
    DD	offset FLAT:L$77
    DD	offset FLAT:L$78
    DD	offset FLAT:L$79
    DD	offset FLAT:L$80
L$85:
    cmp         byte ptr 17H[esi],80H 
    jne         L$106 
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         ecx,dword ptr FLAT:L$619 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$105 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$86:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
    add         dword ptr 4[edi],eax 
L$87:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
    add         dword ptr 0cH[edi],eax 
L$88:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
    add         dword ptr 14H[edi],eax 
L$89:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
    add         dword ptr 1cH[edi],eax 
L$90:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
    add         dword ptr 24H[edi],eax 
L$91:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
    add         dword ptr 2cH[edi],eax 
L$92:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
    add         dword ptr 34H[edi],eax 
L$93:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
    add         dword ptr 3cH[edi],eax 
L$94:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
    add         dword ptr 44H[edi],eax 
L$95:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
    add         dword ptr 4cH[edi],eax 
L$96:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
    add         dword ptr 54H[edi],eax 
L$97:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
    add         dword ptr 5cH[edi],eax 
L$98:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
    add         dword ptr 64H[edi],eax 
L$99:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
    add         dword ptr 6cH[edi],eax 
L$100:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
    add         dword ptr 74H[edi],eax 
L$101:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$102 
    dec         dword ptr FLAT:L$618 
    jne         L$86 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$102:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$104 
L$103:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$103 
    dec         dword ptr FLAT:L$618 
    jne         L$86 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$104:
    mov         byte ptr 1aH[eax],0 
    ret         
L$105:
    DD	offset FLAT:L$86
    DD	offset FLAT:L$87
    DD	offset FLAT:L$88
    DD	offset FLAT:L$89
    DD	offset FLAT:L$90
    DD	offset FLAT:L$91
    DD	offset FLAT:L$92
    DD	offset FLAT:L$93
    DD	offset FLAT:L$94
    DD	offset FLAT:L$95
    DD	offset FLAT:L$96
    DD	offset FLAT:L$97
    DD	offset FLAT:L$98
    DD	offset FLAT:L$99
    DD	offset FLAT:L$100
    DD	offset FLAT:L$101
L$106:
    cmp         byte ptr 17H[esi],0ffH 
    jne         L$128 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$107 
    mov         ebx,0ffH 
L$107:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         ecx,dword ptr FLAT:L$619 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$127 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$108:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$109:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$110:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$111:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$112:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$113:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$114:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$115:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$116:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$117:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$118:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$119:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$120:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$121:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$122:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$123:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$124 
    dec         dword ptr FLAT:L$618 
    jne         L$108 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$124:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$126 
L$125:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$125 
    dec         dword ptr FLAT:L$618 
    jne         L$108 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$126:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
    nop         
L$127:
    DD	offset FLAT:L$108
    DD	offset FLAT:L$109
    DD	offset FLAT:L$110
    DD	offset FLAT:L$111
    DD	offset FLAT:L$112
    DD	offset FLAT:L$113
    DD	offset FLAT:L$114
    DD	offset FLAT:L$115
    DD	offset FLAT:L$116
    DD	offset FLAT:L$117
    DD	offset FLAT:L$118
    DD	offset FLAT:L$119
    DD	offset FLAT:L$120
    DD	offset FLAT:L$121
    DD	offset FLAT:L$122
    DD	offset FLAT:L$123
L$128:
    xor         eax,eax 
    mov         al,byte ptr 17H[esi] 
    mov         ecx,ebx 
    imul        ecx,eax 
    shr         ecx,7 
    neg         eax 
    add         eax,100H 
    imul        ebx,eax 
    shr         ebx,7 
    cmp         ebx,0ffH 
    jbe         L$129 
    mov         ebx,0ffH 
L$129:
    cmp         ecx,0ffH 
    jbe         L$130 
    mov         ecx,0ffH 
L$130:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    shl         ecx,8 
    add         ecx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$150 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$131:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr [edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 4[edi],eax 
L$132:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 8[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 0cH[edi],eax 
L$133:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 10H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 14H[edi],eax 
L$134:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 18H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 1cH[edi],eax 
L$135:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 20H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 24H[edi],eax 
L$136:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 28H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 2cH[edi],eax 
L$137:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 30H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 34H[edi],eax 
L$138:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 38H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 3cH[edi],eax 
L$139:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 40H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 44H[edi],eax 
L$140:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 48H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 4cH[edi],eax 
L$141:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 50H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 54H[edi],eax 
L$142:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 58H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 5cH[edi],eax 
L$143:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 60H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 64H[edi],eax 
L$144:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 68H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 6cH[edi],eax 
L$145:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 70H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 74H[edi],eax 
L$146:
    mov         bl,byte ptr [esi] 
    add         edx,dword ptr FLAT:L$619 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    mov         cl,bl 
    add         dword ptr 78H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$147 
    dec         dword ptr FLAT:L$618 
    jne         L$131 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$147:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$149 
L$148:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$148 
    dec         dword ptr FLAT:L$618 
    jne         L$131 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$149:
    mov         byte ptr 1aH[eax],0 
    ret         
L$150:
    DD	offset FLAT:L$131
    DD	offset FLAT:L$132
    DD	offset FLAT:L$133
    DD	offset FLAT:L$134
    DD	offset FLAT:L$135
    DD	offset FLAT:L$136
    DD	offset FLAT:L$137
    DD	offset FLAT:L$138
    DD	offset FLAT:L$139
    DD	offset FLAT:L$140
    DD	offset FLAT:L$141
    DD	offset FLAT:L$142
    DD	offset FLAT:L$143
    DD	offset FLAT:L$144
    DD	offset FLAT:L$145
    DD	offset FLAT:L$146
L$151:
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$152 
    mov         eax,4000H 
L$152:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         ecx,dword ptr FLAT:L$619 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    add         eax,offset FLAT:L$172 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
L$153:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$154:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$155:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$156:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$157:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$158:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$159:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$160:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$161:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$162:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$163:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$164:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$165:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$166:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$167:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$168:
    mov         bl,byte ptr [esi] 
    add         edx,ecx 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
    add         edi,40H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$169 
    dec         dword ptr FLAT:L$618 
    jne         L$153 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$169:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$171 
L$170:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$170 
    dec         dword ptr FLAT:L$618 
    jne         L$153 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$171:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
    nop         
L$172:
    DD	offset FLAT:L$153
    DD	offset FLAT:L$154
    DD	offset FLAT:L$155
    DD	offset FLAT:L$156
    DD	offset FLAT:L$157
    DD	offset FLAT:L$158
    DD	offset FLAT:L$159
    DD	offset FLAT:L$160
    DD	offset FLAT:L$161
    DD	offset FLAT:L$162
    DD	offset FLAT:L$163
    DD	offset FLAT:L$164
    DD	offset FLAT:L$165
    DD	offset FLAT:L$166
    DD	offset FLAT:L$167
    DD	offset FLAT:L$168
L$173:
    ret         
L$174:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$263 
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$175 
    mov         eax,4000H 
L$175:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    cmp         byte ptr 17H[esi],0 
    jne         L$197 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$176 
    mov         ebx,0ffH 
L$176:
    mov         ecx,dword ptr FLAT:L$619 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$196 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$177:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$178:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$179:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$180:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$181:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$182:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$183:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$184:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$185:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
L$186:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
L$187:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
L$188:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
L$189:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
L$190:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
L$191:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
L$192:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$193 
    dec         dword ptr FLAT:L$618 
    jne         L$177 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$193:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$195 
L$194:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$194 
    dec         dword ptr FLAT:L$618 
    jne         L$177 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$195:
    mov         byte ptr 1aH[eax],0 
    ret         
L$196:
    DD	offset FLAT:L$177
    DD	offset FLAT:L$178
    DD	offset FLAT:L$179
    DD	offset FLAT:L$180
    DD	offset FLAT:L$181
    DD	offset FLAT:L$182
    DD	offset FLAT:L$183
    DD	offset FLAT:L$184
    DD	offset FLAT:L$185
    DD	offset FLAT:L$186
    DD	offset FLAT:L$187
    DD	offset FLAT:L$188
    DD	offset FLAT:L$189
    DD	offset FLAT:L$190
    DD	offset FLAT:L$191
    DD	offset FLAT:L$192
L$197:
    cmp         byte ptr 17H[esi],80H 
    jne         L$218 
    mov         ecx,dword ptr FLAT:L$619 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$217 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$198:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
    add         dword ptr 4[edi],eax 
L$199:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
    add         dword ptr 0cH[edi],eax 
L$200:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
    add         dword ptr 14H[edi],eax 
L$201:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
    add         dword ptr 1cH[edi],eax 
L$202:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
    add         dword ptr 24H[edi],eax 
L$203:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
    add         dword ptr 2cH[edi],eax 
L$204:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
    add         dword ptr 34H[edi],eax 
L$205:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
    add         dword ptr 3cH[edi],eax 
L$206:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
    add         dword ptr 44H[edi],eax 
L$207:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
    add         dword ptr 4cH[edi],eax 
L$208:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
    add         dword ptr 54H[edi],eax 
L$209:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
    add         dword ptr 5cH[edi],eax 
L$210:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
    add         dword ptr 64H[edi],eax 
L$211:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
    add         dword ptr 6cH[edi],eax 
L$212:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
    add         dword ptr 74H[edi],eax 
L$213:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$214 
    dec         dword ptr FLAT:L$618 
    jne         L$198 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$214:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$216 
L$215:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$215 
    dec         dword ptr FLAT:L$618 
    jne         L$198 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$216:
    mov         byte ptr 1aH[eax],0 
    ret         
L$217:
    DD	offset FLAT:L$198
    DD	offset FLAT:L$199
    DD	offset FLAT:L$200
    DD	offset FLAT:L$201
    DD	offset FLAT:L$202
    DD	offset FLAT:L$203
    DD	offset FLAT:L$204
    DD	offset FLAT:L$205
    DD	offset FLAT:L$206
    DD	offset FLAT:L$207
    DD	offset FLAT:L$208
    DD	offset FLAT:L$209
    DD	offset FLAT:L$210
    DD	offset FLAT:L$211
    DD	offset FLAT:L$212
    DD	offset FLAT:L$213
L$218:
    cmp         byte ptr 17H[esi],0ffH 
    jne         L$240 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$219 
    mov         ebx,0ffH 
L$219:
    mov         ecx,dword ptr FLAT:L$619 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$239 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$220:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$221:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$222:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$223:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$224:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$225:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$226:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$227:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$228:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$229:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$230:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$231:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$232:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$233:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$234:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$235:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$236 
    dec         dword ptr FLAT:L$618 
    jne         L$220 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$236:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$238 
L$237:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$237 
    dec         dword ptr FLAT:L$618 
    jne         L$220 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$238:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
    nop         
L$239:
    DD	offset FLAT:L$220
    DD	offset FLAT:L$221
    DD	offset FLAT:L$222
    DD	offset FLAT:L$223
    DD	offset FLAT:L$224
    DD	offset FLAT:L$225
    DD	offset FLAT:L$226
    DD	offset FLAT:L$227
    DD	offset FLAT:L$228
    DD	offset FLAT:L$229
    DD	offset FLAT:L$230
    DD	offset FLAT:L$231
    DD	offset FLAT:L$232
    DD	offset FLAT:L$233
    DD	offset FLAT:L$234
    DD	offset FLAT:L$235
L$240:
    xor         eax,eax 
    mov         al,byte ptr 17H[esi] 
    mov         ecx,ebx 
    imul        ecx,eax 
    shr         ecx,7 
    neg         eax 
    add         eax,100H 
    imul        ebx,eax 
    shr         ebx,7 
    cmp         ebx,0ffH 
    jbe         L$241 
    mov         ebx,0ffH 
L$241:
    cmp         ecx,0ffH 
    jbe         L$242 
    mov         ecx,0ffH 
L$242:
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$262 
    jmp         dword ptr [eax] 
    nop         
L$243:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr [edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$244:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 8[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$245:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 10H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$246:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 18H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$247:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 20H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$248:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 28H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$249:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 30H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$250:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 38H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$251:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 40H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$252:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 48H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$253:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 50H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$254:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 58H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$255:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 60H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$256:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 68H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$257:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 70H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$258:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         dword ptr 78H[edi],eax 
    movsx       eax,word ptr [esi*2] 
    imul        eax,ecx 
    sar         eax,0aH 
    add         edx,dword ptr FLAT:L$619 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$259 
    dec         dword ptr FLAT:L$618 
    jne         L$243 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$259:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$261 
L$260:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$260 
    dec         dword ptr FLAT:L$618 
    jne         L$243 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$261:
    mov         byte ptr 1aH[eax],0 
    ret         
L$262:
    DD	offset FLAT:L$243
    DD	offset FLAT:L$244
    DD	offset FLAT:L$245
    DD	offset FLAT:L$246
    DD	offset FLAT:L$247
    DD	offset FLAT:L$248
    DD	offset FLAT:L$249
    DD	offset FLAT:L$250
    DD	offset FLAT:L$251
    DD	offset FLAT:L$252
    DD	offset FLAT:L$253
    DD	offset FLAT:L$254
    DD	offset FLAT:L$255
    DD	offset FLAT:L$256
    DD	offset FLAT:L$257
    DD	offset FLAT:L$258
L$263:
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$264 
    mov         eax,4000H 
L$264:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    mov         ecx,dword ptr FLAT:L$619 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    shl         edx,10H 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    add         eax,offset FLAT:L$284 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$265:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$266:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$267:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$268:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$269:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$270:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$271:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$272:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$273:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$274:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$275:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$276:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$277:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$278:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$279:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$280:
    movsx       eax,word ptr [esi*2] 
    imul        eax,ebx 
    sar         eax,0aH 
    add         edx,ecx 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
    add         edi,40H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$281 
    dec         dword ptr FLAT:L$618 
    jne         L$265 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$281:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$283 
L$282:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$282 
    dec         dword ptr FLAT:L$618 
    jne         L$265 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    shr         edx,10H 
    mov         word ptr 14H[eax],dx 
    ret         
L$283:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
    nop         
L$284:
    DD	offset FLAT:L$265
    DD	offset FLAT:L$266
    DD	offset FLAT:L$267
    DD	offset FLAT:L$268
    DD	offset FLAT:L$269
    DD	offset FLAT:L$270
    DD	offset FLAT:L$271
    DD	offset FLAT:L$272
    DD	offset FLAT:L$273
    DD	offset FLAT:L$274
    DD	offset FLAT:L$275
    DD	offset FLAT:L$276
    DD	offset FLAT:L$277
    DD	offset FLAT:L$278
    DD	offset FLAT:L$279
    DD	offset FLAT:L$280
    ret         
L$285:
    mov         esi,dword ptr FLAT:L$627 
    test        byte ptr 1aH[esi],1 
    je          L$397 
    mov         eax,dword ptr 10H[esi] 
    cmp         eax,82ac0H 
    jbe         L$286 
    mov         eax,82ac0H 
L$286:
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    mov         word ptr FLAT:L$620,ax 
    shr         eax,10H 
    mov         dword ptr FLAT:L$621,eax 
    test        byte ptr 1aH[esi],4 
    jne         L$398 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$375 
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$287 
    mov         eax,4000H 
L$287:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    cmp         byte ptr 17H[esi],0 
    jne         L$309 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$288 
    mov         ebx,0ffH 
L$288:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$308 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$289:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$290:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$291:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$292:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$293:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$294:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$295:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$296:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$297:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
L$298:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
L$299:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
L$300:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
L$301:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
L$302:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
L$303:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
L$304:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$305 
    dec         dword ptr FLAT:L$618 
    jne         L$289 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$305:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$307 
L$306:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$306 
    dec         dword ptr FLAT:L$618 
    jne         L$289 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$307:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$308:
    DD	offset FLAT:L$289
    DD	offset FLAT:L$290
    DD	offset FLAT:L$291
    DD	offset FLAT:L$292
    DD	offset FLAT:L$293
    DD	offset FLAT:L$294
    DD	offset FLAT:L$295
    DD	offset FLAT:L$296
    DD	offset FLAT:L$297
    DD	offset FLAT:L$298
    DD	offset FLAT:L$299
    DD	offset FLAT:L$300
    DD	offset FLAT:L$301
    DD	offset FLAT:L$302
    DD	offset FLAT:L$303
    DD	offset FLAT:L$304
L$309:
    cmp         byte ptr 17H[esi],80H 
    jne         L$330 
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$329 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$310:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
    add         dword ptr 4[edi],eax 
L$311:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
    add         dword ptr 0cH[edi],eax 
L$312:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
    add         dword ptr 14H[edi],eax 
L$313:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
    add         dword ptr 1cH[edi],eax 
L$314:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
    add         dword ptr 24H[edi],eax 
L$315:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
    add         dword ptr 2cH[edi],eax 
L$316:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
    add         dword ptr 34H[edi],eax 
L$317:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
    add         dword ptr 3cH[edi],eax 
L$318:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
    add         dword ptr 44H[edi],eax 
L$319:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
    add         dword ptr 4cH[edi],eax 
L$320:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
    add         dword ptr 54H[edi],eax 
L$321:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
    add         dword ptr 5cH[edi],eax 
L$322:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
    add         dword ptr 64H[edi],eax 
L$323:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
    add         dword ptr 6cH[edi],eax 
L$324:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
    add         dword ptr 74H[edi],eax 
L$325:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$326 
    dec         dword ptr FLAT:L$618 
    jne         L$310 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$326:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$328 
L$327:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$327 
    dec         dword ptr FLAT:L$618 
    jne         L$310 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$328:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$329:
    DD	offset FLAT:L$310
    DD	offset FLAT:L$311
    DD	offset FLAT:L$312
    DD	offset FLAT:L$313
    DD	offset FLAT:L$314
    DD	offset FLAT:L$315
    DD	offset FLAT:L$316
    DD	offset FLAT:L$317
    DD	offset FLAT:L$318
    DD	offset FLAT:L$319
    DD	offset FLAT:L$320
    DD	offset FLAT:L$321
    DD	offset FLAT:L$322
    DD	offset FLAT:L$323
    DD	offset FLAT:L$324
    DD	offset FLAT:L$325
L$330:
    cmp         byte ptr 17H[esi],0ffH 
    jne         L$352 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$331 
    mov         ebx,0ffH 
L$331:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$351 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$332:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$333:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$334:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$335:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$336:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$337:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$338:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$339:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$340:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$341:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$342:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$343:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$344:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$345:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$346:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$347:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$348 
    dec         dword ptr FLAT:L$618 
    jne         L$332 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$348:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$350 
L$349:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$349 
    dec         dword ptr FLAT:L$618 
    jne         L$332 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$350:
    mov         byte ptr 1aH[eax],0 
    ret         
    nop         
L$351:
    DD	offset FLAT:L$332
    DD	offset FLAT:L$333
    DD	offset FLAT:L$334
    DD	offset FLAT:L$335
    DD	offset FLAT:L$336
    DD	offset FLAT:L$337
    DD	offset FLAT:L$338
    DD	offset FLAT:L$339
    DD	offset FLAT:L$340
    DD	offset FLAT:L$341
    DD	offset FLAT:L$342
    DD	offset FLAT:L$343
    DD	offset FLAT:L$344
    DD	offset FLAT:L$345
    DD	offset FLAT:L$346
    DD	offset FLAT:L$347
L$352:
    xor         eax,eax 
    mov         al,byte ptr 17H[esi] 
    mov         ecx,ebx 
    imul        ecx,eax 
    shr         ecx,7 
    neg         eax 
    add         eax,100H 
    imul        ebx,eax 
    shr         ebx,7 
    cmp         ebx,0ffH 
    jbe         L$353 
    mov         ebx,0ffH 
L$353:
    cmp         ecx,0ffH 
    jbe         L$354 
    mov         ecx,0ffH 
L$354:
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    shl         ecx,8 
    add         ecx,dword ptr FLAT:_judas_volumetable 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$374 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$355:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr [edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 4[edi],eax 
L$356:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 8[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 0cH[edi],eax 
L$357:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 10H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 14H[edi],eax 
L$358:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 18H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 1cH[edi],eax 
L$359:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 20H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 24H[edi],eax 
L$360:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 28H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 2cH[edi],eax 
L$361:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 30H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 34H[edi],eax 
L$362:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 38H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 3cH[edi],eax 
L$363:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 40H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 44H[edi],eax 
L$364:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 48H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 4cH[edi],eax 
L$365:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 50H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 54H[edi],eax 
L$366:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 58H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 5cH[edi],eax 
L$367:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 60H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 64H[edi],eax 
L$368:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 68H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 6cH[edi],eax 
L$369:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 70H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 74H[edi],eax 
L$370:
    movsx       eax,byte ptr 1[esi] 
    movsx       ebp,byte ptr [esi] 
    sub         eax,ebp 
    movzx       ebp,dh 
    imul        ax,bp 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,dword ptr FLAT:L$621 
    mov         cl,bl 
    add         dword ptr 78H[edi],eax 
    mov         eax,dword ptr [ecx*4] 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$371 
    dec         dword ptr FLAT:L$618 
    jne         L$355 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$371:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$373 
L$372:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$372 
    dec         dword ptr FLAT:L$618 
    jne         L$355 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$373:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$374:
    DD	offset FLAT:L$355
    DD	offset FLAT:L$356
    DD	offset FLAT:L$357
    DD	offset FLAT:L$358
    DD	offset FLAT:L$359
    DD	offset FLAT:L$360
    DD	offset FLAT:L$361
    DD	offset FLAT:L$362
    DD	offset FLAT:L$363
    DD	offset FLAT:L$364
    DD	offset FLAT:L$365
    DD	offset FLAT:L$366
    DD	offset FLAT:L$367
    DD	offset FLAT:L$368
    DD	offset FLAT:L$369
    DD	offset FLAT:L$370
L$375:
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$376 
    mov         eax,4000H 
L$376:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    shl         ebx,8 
    add         ebx,dword ptr FLAT:_judas_volumetable 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[esi] 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    add         eax,offset FLAT:L$396 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$377:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$378:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$379:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$380:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$381:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$382:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$383:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$384:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$385:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$386:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$387:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$388:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$389:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$390:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$391:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$392:
    movsx       eax,byte ptr 1[esi] 
    movsx       ecx,byte ptr [esi] 
    sub         eax,ecx 
    movzx       ecx,dh 
    imul        ax,cx 
    mov         bl,ah 
    add         bl,byte ptr [esi] 
    add         dx,word ptr FLAT:L$620 
    mov         eax,dword ptr [ebx*4] 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
    add         edi,40H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$393 
    dec         dword ptr FLAT:L$618 
    jne         L$377 
    mov         eax,dword ptr FLAT:L$627 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$393:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$395 
L$394:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$394 
    dec         dword ptr FLAT:L$618 
    jne         L$377 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$395:
    mov         byte ptr 1aH[eax],0 
    ret         
    nop         
L$396:
    DD	offset FLAT:L$377
    DD	offset FLAT:L$378
    DD	offset FLAT:L$379
    DD	offset FLAT:L$380
    DD	offset FLAT:L$381
    DD	offset FLAT:L$382
    DD	offset FLAT:L$383
    DD	offset FLAT:L$384
    DD	offset FLAT:L$385
    DD	offset FLAT:L$386
    DD	offset FLAT:L$387
    DD	offset FLAT:L$388
    DD	offset FLAT:L$389
    DD	offset FLAT:L$390
    DD	offset FLAT:L$391
    DD	offset FLAT:L$392
L$397:
    ret         
L$398:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$487 
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$399 
    mov         eax,4000H 
L$399:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    cmp         byte ptr 17H[esi],0 
    jne         L$421 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$400 
    mov         ebx,0ffH 
L$400:
    mov         dword ptr FLAT:L$633,ebx 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$420 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$401:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$402:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$403:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$404:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$405:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$406:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$407:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$408:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$409:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
L$410:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
L$411:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
L$412:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
L$413:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
L$414:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
L$415:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
L$416:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$417 
    dec         dword ptr FLAT:L$618 
    jne         L$401 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$417:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$419 
L$418:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$418 
    dec         dword ptr FLAT:L$618 
    jne         L$401 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$419:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$420:
    DD	offset FLAT:L$401
    DD	offset FLAT:L$402
    DD	offset FLAT:L$403
    DD	offset FLAT:L$404
    DD	offset FLAT:L$405
    DD	offset FLAT:L$406
    DD	offset FLAT:L$407
    DD	offset FLAT:L$408
    DD	offset FLAT:L$409
    DD	offset FLAT:L$410
    DD	offset FLAT:L$411
    DD	offset FLAT:L$412
    DD	offset FLAT:L$413
    DD	offset FLAT:L$414
    DD	offset FLAT:L$415
    DD	offset FLAT:L$416
L$421:
    cmp         byte ptr 17H[esi],80H 
    jne         L$442 
    mov         dword ptr FLAT:L$633,ebx 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$441 
    jmp         dword ptr [eax] 
L$422:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
    add         dword ptr 4[edi],eax 
L$423:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
    add         dword ptr 0cH[edi],eax 
L$424:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
    add         dword ptr 14H[edi],eax 
L$425:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
    add         dword ptr 1cH[edi],eax 
L$426:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
    add         dword ptr 24H[edi],eax 
L$427:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
    add         dword ptr 2cH[edi],eax 
L$428:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
    add         dword ptr 34H[edi],eax 
L$429:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
    add         dword ptr 3cH[edi],eax 
L$430:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 40H[edi],eax 
    add         dword ptr 44H[edi],eax 
L$431:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 48H[edi],eax 
    add         dword ptr 4cH[edi],eax 
L$432:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 50H[edi],eax 
    add         dword ptr 54H[edi],eax 
L$433:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 58H[edi],eax 
    add         dword ptr 5cH[edi],eax 
L$434:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 60H[edi],eax 
    add         dword ptr 64H[edi],eax 
L$435:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 68H[edi],eax 
    add         dword ptr 6cH[edi],eax 
L$436:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 70H[edi],eax 
    add         dword ptr 74H[edi],eax 
L$437:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 78H[edi],eax 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$438 
    dec         dword ptr FLAT:L$618 
    jne         L$422 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$438:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$440 
L$439:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$439 
    dec         dword ptr FLAT:L$618 
    jne         L$422 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$440:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$441:
    DD	offset FLAT:L$422
    DD	offset FLAT:L$423
    DD	offset FLAT:L$424
    DD	offset FLAT:L$425
    DD	offset FLAT:L$426
    DD	offset FLAT:L$427
    DD	offset FLAT:L$428
    DD	offset FLAT:L$429
    DD	offset FLAT:L$430
    DD	offset FLAT:L$431
    DD	offset FLAT:L$432
    DD	offset FLAT:L$433
    DD	offset FLAT:L$434
    DD	offset FLAT:L$435
    DD	offset FLAT:L$436
    DD	offset FLAT:L$437
L$442:
    cmp         byte ptr 17H[esi],0ffH 
    jne         L$464 
    shl         ebx,1 
    cmp         ebx,0ffH 
    jbe         L$443 
    mov         ebx,0ffH 
L$443:
    mov         dword ptr FLAT:L$633,ebx 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$463 
    jmp         dword ptr [eax] 
    nop         
L$444:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$445:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$446:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$447:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$448:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$449:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$450:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$451:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$452:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$453:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$454:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$455:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$456:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$457:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$458:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$459:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$460 
    dec         dword ptr FLAT:L$618 
    jne         L$444 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$460:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$462 
L$461:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$461 
    dec         dword ptr FLAT:L$618 
    jne         L$444 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$462:
    mov         byte ptr 1aH[eax],0 
    ret         
    nop         
L$463:
    DD	offset FLAT:L$444
    DD	offset FLAT:L$445
    DD	offset FLAT:L$446
    DD	offset FLAT:L$447
    DD	offset FLAT:L$448
    DD	offset FLAT:L$449
    DD	offset FLAT:L$450
    DD	offset FLAT:L$451
    DD	offset FLAT:L$452
    DD	offset FLAT:L$453
    DD	offset FLAT:L$454
    DD	offset FLAT:L$455
    DD	offset FLAT:L$456
    DD	offset FLAT:L$457
    DD	offset FLAT:L$458
    DD	offset FLAT:L$459
L$464:
    xor         eax,eax 
    mov         al,byte ptr 17H[esi] 
    mov         ecx,ebx 
    imul        ecx,eax 
    shr         ecx,7 
    neg         eax 
    add         eax,100H 
    imul        ebx,eax 
    shr         ebx,7 
    cmp         ebx,0ffH 
    jbe         L$465 
    mov         ebx,0ffH 
L$465:
    cmp         ecx,0ffH 
    jbe         L$466 
    mov         ecx,0ffH 
L$466:
    mov         dword ptr FLAT:L$633,ebx 
    mov         dword ptr FLAT:L$634,ecx 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    sub         edi,eax 
    add         eax,offset FLAT:L$486 
    jmp         dword ptr [eax] 
L$467:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr [edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$468:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 8[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$469:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 10H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$470:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 18H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$471:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 20H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$472:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 28H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$473:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 30H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$474:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 38H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
L$475:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 40H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 44H[edi],eax 
L$476:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 48H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 4cH[edi],eax 
L$477:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 50H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 54H[edi],eax 
L$478:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 58H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 5cH[edi],eax 
L$479:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 60H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 64H[edi],eax 
L$480:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 68H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 6cH[edi],eax 
L$481:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 70H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 74H[edi],eax 
L$482:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    mov         ebx,eax 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dword ptr 78H[edi],eax 
    mov         eax,ebx 
    imul        eax,dword ptr FLAT:L$634 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 7cH[edi],eax 
    add         edi,80H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$483 
    dec         dword ptr FLAT:L$618 
    jne         L$467 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$483:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$485 
L$484:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$484 
    dec         dword ptr FLAT:L$618 
    jne         L$467 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$485:
    mov         byte ptr 1aH[eax],0 
    ret         
    xchg        ebx,ebx 
L$486:
    DD	offset FLAT:L$467
    DD	offset FLAT:L$468
    DD	offset FLAT:L$469
    DD	offset FLAT:L$470
    DD	offset FLAT:L$471
    DD	offset FLAT:L$472
    DD	offset FLAT:L$473
    DD	offset FLAT:L$474
    DD	offset FLAT:L$475
    DD	offset FLAT:L$476
    DD	offset FLAT:L$477
    DD	offset FLAT:L$478
    DD	offset FLAT:L$479
    DD	offset FLAT:L$480
    DD	offset FLAT:L$481
    DD	offset FLAT:L$482
L$487:
    xor         eax,eax 
    mov         ax,word ptr 18H[esi] 
    cmp         eax,4000H 
    jbe         L$488 
    mov         eax,4000H 
L$488:
    xor         ebx,ebx 
    mov         bl,byte ptr 16H[esi] 
    imul        eax,ebx 
    shr         eax,0eH 
    or          al,al 
    je          L$509 
    mov         ebx,eax 
    mov         dword ptr FLAT:L$633,ebx 
    mov         ebp,dword ptr FLAT:L$621 
    mov         dx,word ptr 14H[esi] 
    mov         eax,dword ptr 8[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         esi,dword ptr [esi] 
    shr         esi,1 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    dec         eax 
    shr         eax,4 
    inc         eax 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr FLAT:L$624 
    and         eax,0fH 
    mov         eax,dword ptr FLAT:L$641[eax*4] 
    sub         edi,eax 
    add         eax,offset FLAT:L$508 
    jmp         dword ptr [eax] 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    nop         
L$489:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr [edi],eax 
L$490:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 4[edi],eax 
L$491:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 8[edi],eax 
L$492:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 0cH[edi],eax 
L$493:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 10H[edi],eax 
L$494:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 14H[edi],eax 
L$495:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 18H[edi],eax 
L$496:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 1cH[edi],eax 
L$497:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 20H[edi],eax 
L$498:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 24H[edi],eax 
L$499:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 28H[edi],eax 
L$500:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 2cH[edi],eax 
L$501:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 30H[edi],eax 
L$502:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 34H[edi],eax 
L$503:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 38H[edi],eax 
L$504:
    movsx       eax,word ptr 2[esi*2] 
    movsx       ecx,word ptr [esi*2] 
    sub         eax,ecx 
    movzx       ebx,dh 
    imul        eax,ebx 
    sar         eax,8 
    add         eax,ecx 
    imul        eax,dword ptr FLAT:L$633 
    sar         eax,0aH 
    add         dx,word ptr FLAT:L$620 
    adc         esi,ebp 
    add         dword ptr 3cH[edi],eax 
    add         edi,40H 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$505 
    dec         dword ptr FLAT:L$618 
    jne         L$489 
    mov         eax,dword ptr FLAT:L$627 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$505:
    mov         eax,dword ptr FLAT:L$627 
    test        byte ptr 1aH[eax],2 
    je          L$507 
L$506:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$506 
    dec         dword ptr FLAT:L$618 
    jne         L$489 
    shl         esi,1 
    mov         dword ptr [eax],esi 
    mov         word ptr 14H[eax],dx 
    ret         
L$507:
    mov         byte ptr 1aH[eax],0 
    ret         
    nop         
L$508:
    DD	offset FLAT:L$489
    DD	offset FLAT:L$490
    DD	offset FLAT:L$491
    DD	offset FLAT:L$492
    DD	offset FLAT:L$493
    DD	offset FLAT:L$494
    DD	offset FLAT:L$495
    DD	offset FLAT:L$496
    DD	offset FLAT:L$497
    DD	offset FLAT:L$498
    DD	offset FLAT:L$499
    DD	offset FLAT:L$500
    DD	offset FLAT:L$501
    DD	offset FLAT:L$502
    DD	offset FLAT:L$503
    DD	offset FLAT:L$504
    ret         
L$509:
    mov         ebp,dword ptr FLAT:L$624 
    mov         ebx,dword ptr [esi] 
    mov         ecx,ebx 
    shr         ebx,10H 
    shl         ecx,10H 
    mov         cx,word ptr 14H[esi] 
    mov         eax,dword ptr 10H[esi] 
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    test        byte ptr 1aH[esi],4 
    je          L$510 
    shl         ebp,1 
L$510:
    mul         ebp 
    add         ecx,eax 
    adc         ebx,edx 
    mov         word ptr 14H[esi],cx 
    shl         ebx,10H 
    shr         ecx,10H 
    or          ecx,ebx 
    test        byte ptr 1aH[esi],4 
    je          L$511 
    and         ecx,0fffffffeH 
L$511:
    test        byte ptr 1aH[esi],2 
    jne         L$514 
    cmp         ecx,dword ptr 8[esi] 
    jae         L$513 
L$512:
    mov         dword ptr [esi],ecx 
    ret         
L$513:
    mov         byte ptr 1aH[esi],0 
    ret         
L$514:
    mov         eax,dword ptr 8[esi] 
    sub         eax,dword ptr 4[esi] 
L$515:
    cmp         ecx,dword ptr 8[esi] 
    jb          L$512 
    sub         ecx,eax 
    jmp         L$515 
qmixer_:
    test        edx,edx 
    je          L$565 
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$516 
    shr         edx,1 
L$516:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$517 
    shr         edx,1 
L$517:
    mov         dword ptr FLAT:L$629,eax 
    mov         dword ptr FLAT:L$624,edx 
    mov         dword ptr FLAT:L$625,edx 
    mov         dword ptr FLAT:L$626,edx 
    mov         edi,dword ptr FLAT:_judas_clipbuffer 
    mov         dword ptr FLAT:L$628,edi 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    xor         eax,eax 
    mov         ecx,edx 
    shl         ecx,1 
L$518:
    mov         dword ptr [edi],eax 
    mov         dword ptr [ebx],eax 
    add         edi,4 
    add         ebx,4 
    dec         ecx 
    jne         L$518 
    cmp         dword ptr FLAT:_judas_player,0 
    jne         L$519 
    call        dword ptr FLAT:_judas_mixroutine 
    jmp         L$523 
L$519:
    cmp         dword ptr FLAT:_judas_bpmcount,0 
    jne         L$521 
    cmp         dword ptr FLAT:_judas_player,0 
    je          L$520 
    call        dword ptr FLAT:_judas_player 
L$520:
    mov         eax,dword ptr FLAT:_judas_mixrate 
    mov         ebp,5 
    mul         ebp 
    shr         eax,1 
    xor         edx,edx 
    movzx       ebp,byte ptr FLAT:_judas_bpmtempo 
    div         ebp 
    mov         dword ptr FLAT:_judas_bpmcount,eax 
L$521:
    mov         eax,dword ptr FLAT:L$625 
    cmp         eax,dword ptr FLAT:_judas_bpmcount 
    jbe         L$522 
    mov         eax,dword ptr FLAT:_judas_bpmcount 
L$522:
    mov         dword ptr FLAT:L$624,eax 
    call        dword ptr FLAT:_judas_mixroutine 
    mov         eax,dword ptr FLAT:L$624 
    sub         dword ptr FLAT:_judas_bpmcount,eax 
    mov         ebp,eax 
    shl         ebp,3 
    add         dword ptr FLAT:L$628,ebp 
    sub         dword ptr FLAT:L$625,eax 
    jne         L$519 
L$523:
    test        byte ptr FLAT:_judas_mixmode,2 
    je          L$536 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$531 
    cmp         dword ptr FLAT:_judas_device,4 
    je          L$549 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
L$524:
    mov         eax,dword ptr [esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    add         eax,ecx 
    sar         eax,0eH 
    cmp         eax,7fffH 
    jg          L$527 
    cmp         eax,0ffff8000H 
    jl          L$528 
    mov         word ptr [edi],ax 
L$525:
    mov         eax,dword ptr 4[esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    add         eax,ecx 
    sar         eax,0eH 
    cmp         eax,7fffH 
    jg          L$529 
    cmp         eax,0ffff8000H 
    jl          L$530 
    mov         word ptr 2[edi],ax 
L$526:
    add         esi,8 
    add         ebx,8 
    add         edi,4 
    dec         dword ptr FLAT:L$626 
    jne         L$524 
    ret         
L$527:
    mov         word ptr [edi],7fffH 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$525 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$525 
L$528:
    mov         word ptr [edi],8000H 
    neg         eax 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$525 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$525 
L$529:
    mov         word ptr 2[edi],7fffH 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$526 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$526 
L$530:
    mov         word ptr 2[edi],8000H 
    neg         eax 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$526 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$526 
L$531:
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
L$532:
    mov         eax,dword ptr [esi] 
    sar         eax,1 
    mov         ecx,dword ptr 4[esi] 
    sar         ecx,1 
    add         eax,ecx 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    sar         ecx,1 
    add         eax,ecx 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    sar         ecx,1 
    add         eax,ecx 
    sar         eax,0eH 
    cmp         eax,7fffH 
    jg          L$534 
    cmp         eax,0ffff8000H 
    jl          L$535 
    mov         word ptr [edi],ax 
L$533:
    add         esi,8 
    add         ebx,8 
    add         edi,2 
    dec         dword ptr FLAT:L$626 
    jne         L$532 
    ret         
L$534:
    mov         word ptr [edi],7fffH 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$533 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$533 
L$535:
    mov         word ptr [edi],8000H 
    neg         eax 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$533 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$533 
L$536:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$544 
    cmp         dword ptr FLAT:_judas_device,4 
    je          L$557 
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
L$537:
    mov         eax,dword ptr [esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    add         eax,ecx 
    sar         eax,16H 
    cmp         eax,7fH 
    jg          L$540 
    cmp         eax,0ffffff80H 
    jl          L$541 
    add         al,80H 
    mov         byte ptr [edi],al 
L$538:
    mov         eax,dword ptr 4[esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    add         eax,ecx 
    sar         eax,16H 
    cmp         eax,7fH 
    jg          L$542 
    cmp         eax,0ffffff80H 
    jl          L$543 
    add         al,80H 
    mov         byte ptr 1[edi],al 
L$539:
    add         esi,8 
    add         ebx,8 
    add         edi,2 
    dec         dword ptr FLAT:L$626 
    jne         L$537 
    ret         
L$540:
    mov         byte ptr [edi],0ffH 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$538 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$538 
L$541:
    mov         byte ptr [edi],0 
    neg         eax 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$538 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$538 
L$542:
    mov         byte ptr 1[edi],0ffH 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$539 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$539 
L$543:
    mov         byte ptr 1[edi],0 
    neg         eax 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$539 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$539 
L$544:
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
L$545:
    mov         eax,dword ptr [esi] 
    sar         eax,1 
    mov         ecx,dword ptr 4[esi] 
    sar         ecx,1 
    add         eax,ecx 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    sar         ecx,1 
    add         eax,ecx 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    sar         ecx,1 
    add         eax,ecx 
    sar         eax,16H 
    cmp         eax,7fH 
    jg          L$547 
    cmp         eax,0ffffff80H 
    jl          L$548 
    add         al,80H 
    mov         byte ptr [edi],al 
L$546:
    add         esi,8 
    add         ebx,8 
    inc         edi 
    dec         dword ptr FLAT:L$626 
    jne         L$545 
    ret         
L$547:
    mov         byte ptr [edi],0ffH 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$546 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$546 
L$548:
    mov         byte ptr [edi],0 
    neg         eax 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$546 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$546 
L$549:
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
    add         edx,edi 
    add         edx,20H 
L$550:
    mov         eax,dword ptr [esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    add         eax,ecx 
    sar         eax,0eH 
    cmp         eax,7fffH 
    jg          L$553 
    cmp         eax,0ffff8000H 
    jl          L$554 
    mov         word ptr [edi],ax 
L$551:
    mov         eax,dword ptr 4[esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    add         eax,ecx 
    sar         eax,0eH 
    cmp         eax,7fffH 
    jg          L$555 
    cmp         eax,0ffff8000H 
    jl          L$556 
    mov         word ptr [edx],ax 
L$552:
    add         esi,8 
    add         ebx,8 
    add         edi,2 
    add         edx,2 
    dec         dword ptr FLAT:L$626 
    jne         L$550 
    ret         
L$553:
    mov         word ptr [edi],7fffH 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$551 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$551 
L$554:
    mov         word ptr [edi],8000H 
    neg         eax 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$551 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$551 
L$555:
    mov         word ptr [edx],7fffH 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$552 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$552 
L$556:
    mov         word ptr [edx],8000H 
    neg         eax 
    shr         eax,9 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$552 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$552 
L$557:
    mov         esi,dword ptr FLAT:_judas_clipbuffer 
    mov         ebx,dword ptr FLAT:_judas_zladdbuffer 
    mov         edi,dword ptr FLAT:L$629 
    mov         edx,dword ptr FLAT:_judas_bufferlength 
    shr         edx,1 
    add         edx,edi 
    add         edx,20H 
L$558:
    mov         eax,dword ptr [esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevell 
    add         ecx,dword ptr [ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevell,ecx 
    add         eax,ecx 
    sar         eax,16H 
    cmp         eax,7fH 
    jg          L$561 
    cmp         eax,0ffffff80H 
    jl          L$562 
    add         al,80H 
    mov         byte ptr [edi],al 
L$559:
    mov         eax,dword ptr 4[esi] 
    mov         ecx,dword ptr FLAT:_judas_zerolevelr 
    add         ecx,dword ptr 4[ebx] 
    mov         ebp,ecx 
    sar         ebp,7 
    sub         ecx,ebp 
    mov         dword ptr FLAT:_judas_zerolevelr,ecx 
    add         eax,ecx 
    sar         eax,16H 
    cmp         eax,7fH 
    jg          L$563 
    cmp         eax,0ffffff80H 
    jl          L$564 
    add         al,80H 
    mov         byte ptr [edx],al 
L$560:
    add         esi,8 
    add         ebx,8 
    inc         edi 
    inc         edx 
    dec         dword ptr FLAT:L$626 
    jne         L$558 
    ret         
L$561:
    mov         byte ptr [edi],0ffH 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$559 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$559 
L$562:
    mov         byte ptr [edi],0 
    neg         eax 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$559 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$559 
L$563:
    mov         byte ptr [edx],0ffH 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$560 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$560 
L$564:
    mov         byte ptr [edx],0 
    neg         eax 
    shr         eax,1 
    cmp         byte ptr FLAT:_judas_clipped,al 
    jae         L$560 
    mov         byte ptr FLAT:_judas_clipped,al 
    jmp         L$560 
L$565:
    ret         
qmix_cubic_:
    mov         dword ptr FLAT:L$627,offset FLAT:_judas_channel 
L$566:
    call        near ptr L$595 
    add         dword ptr FLAT:L$627,30H 
    cmp         dword ptr FLAT:L$627,offset FLAT:_judas_channel+600H 
    jne         L$566 
    ret         
qmix_linear_:
    mov         dword ptr FLAT:L$627,offset FLAT:_judas_channel 
    call        near ptr L$574 
    add         dword ptr FLAT:L$627,30H 
    cmp         dword ptr FLAT:L$627,offset FLAT:_judas_channel+600H 
    jne         L$566 
    ret         
L$567:
    mov         eax,dword ptr FLAT:L$628 
    sub         eax,dword ptr FLAT:_judas_clipbuffer 
    add         eax,dword ptr FLAT:_judas_zladdbuffer 
    mov         edx,dword ptr 20H[ebx] 
    add         dword ptr [eax],edx 
    mov         edx,dword ptr 24H[ebx] 
    mov         dword ptr 20H[ebx],0 
    add         dword ptr 4[eax],edx 
    mov         dword ptr 24H[ebx],0 
    mov         esi,dword ptr FLAT:L$624 
    mov         ebp,dword ptr [ebx] 
    mov         ecx,ebp 
    shr         ebp,10H 
    shl         ecx,10H 
    mov         cx,word ptr 14H[ebx] 
    mov         eax,dword ptr 10H[ebx] 
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    test        byte ptr 1aH[ebx],4 
    je          L$568 
    shl         esi,1 
L$568:
    mul         esi 
    add         ecx,eax 
    adc         ebp,edx 
    mov         word ptr 14H[ebx],cx 
    shl         ebp,10H 
    shr         ecx,10H 
    or          ecx,ebp 
    test        byte ptr 1aH[ebx],4 
    je          L$569 
    and         ecx,0fffffffeH 
L$569:
    test        byte ptr 1aH[ebx],2 
    jne         L$572 
    cmp         ecx,dword ptr 8[ebx] 
    jae         L$571 
L$570:
    mov         dword ptr [ebx],ecx 
    ret         
L$571:
    mov         byte ptr 1aH[ebx],0 
    ret         
L$572:
    mov         eax,dword ptr 8[ebx] 
    sub         eax,dword ptr 4[ebx] 
L$573:
    cmp         ecx,dword ptr 8[ebx] 
    jb          L$570 
    sub         ecx,eax 
    jmp         L$573 
L$574:
    mov         ebx,dword ptr FLAT:L$627 
    mov         al,byte ptr 1aH[ebx] 
    test        al,1 
    jne         L$575 
    cmp         al,byte ptr 1bH[ebx] 
    je          L$594 
    mov         byte ptr 1bH[ebx],al 
    mov         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         edx,dword ptr FLAT:L$628 
    mov         eax,dword ptr 20H[ebx] 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    mov         dword ptr 20H[ebx],0 
    add         dword ptr [edx],eax 
    mov         eax,dword ptr 24H[ebx] 
    mov         dword ptr 24H[ebx],0 
    add         dword ptr 4[edx],eax 
    jmp         near ptr L$594 
L$575:
    mov         eax,dword ptr 10H[ebx] 
    cmp         eax,82ac0H 
    jbe         L$576 
    mov         eax,82ac0H 
L$576:
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    mov         word ptr FLAT:L$620,ax 
    shr         eax,10H 
    mov         dword ptr FLAT:L$621,eax 
    test        byte ptr 1aH[ebx],4 
    jne         L$585 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$577 
L$577:
    xor         eax,eax 
    mov         ax,word ptr 18H[ebx] 
    xor         ecx,ecx 
    mov         cl,byte ptr 16H[ebx] 
    imul        eax,ecx 
    shr         eax,8 
    mov         ebp,eax 
    or          ax,word ptr 29H[ebx] 
    or          ax,word ptr 2dH[ebx] 
    je          L$567 
    xor         eax,eax 
    mov         al,byte ptr 17H[ebx] 
    mov         ecx,ebp 
    imul        ecx,eax 
    neg         eax 
    add         eax,0ffH 
    imul        ebp,eax 
    mov         dword ptr FLAT:L$633,ebp 
    mov         dword ptr FLAT:L$634,ecx 
    mov         esi,dword ptr [ebx] 
    mov         cx,word ptr 14H[ebx] 
    shl         ecx,10H 
    mov         eax,dword ptr 8[ebx] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[ebx] 
    mov         dword ptr FLAT:L$623,eax 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr [ebx] 
    cmp         eax,dword ptr 1cH[ebx] 
    je          L$578 
    mov         edx,dword ptr FLAT:L$633 
    mov         dword ptr FLAT:L$635,edx 
    mov         edx,dword ptr FLAT:L$634 
    mov         dword ptr FLAT:L$636,edx 
    mov         dword ptr FLAT:L$637,ebx 
    movsx       eax,byte ptr [esi] 
    movsx       ebp,byte ptr 1[esi] 
    mov         ebx,dword ptr FLAT:L$634 
    sub         ebp,eax 
    mov         edx,ecx 
    sub         ebx,dword ptr FLAT:L$636 
    shr         edx,11H 
    add         edi,8 
    imul        ebp,edx 
    sar         ebx,6 
    mov         edx,dword ptr FLAT:L$633 
    add         ebx,dword ptr FLAT:L$636 
    sub         edx,dword ptr FLAT:L$635 
    shl         eax,8 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    sar         ebp,7 
    mov         dword ptr FLAT:L$635,edx 
    shr         edx,7 
    add         ebp,eax 
    add         ecx,dword ptr FLAT:L$619 
    mov         eax,ebp 
    adc         esi,dword ptr FLAT:L$621 
    imul        ebp,ebx 
    imul        eax,edx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
    mov         ebx,dword ptr FLAT:L$637 
    mov         edx,dword ptr 20H[ebx] 
    mov         dword ptr FLAT:L$637,eax 
    sub         edx,eax 
    mov         eax,dword ptr FLAT:_judas_zladdbuffer 
    sub         eax,dword ptr FLAT:_judas_clipbuffer 
    add         dword ptr -8[eax+edi],edx 
    mov         edx,dword ptr 24H[ebx] 
    sub         edx,ebp 
    add         dword ptr -4[eax+edi],edx 
    mov         eax,dword ptr FLAT:L$637 
    mov         dword ptr FLAT:L$637,ebx 
    jmp         near ptr L$580 
L$578:
    mov         edx,dword ptr 28H[ebx] 
    mov         ebp,dword ptr 2cH[ebx] 
    mov         dword ptr FLAT:L$635,edx 
    mov         dword ptr FLAT:L$636,ebp 
    mov         dword ptr FLAT:L$637,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$579:
    movsx       eax,byte ptr [esi] 
    movsx       ebp,byte ptr 1[esi] 
    mov         ebx,dword ptr FLAT:L$634 
    sub         ebp,eax 
    mov         edx,ecx 
    sub         ebx,dword ptr FLAT:L$636 
    shr         edx,11H 
    add         edi,8 
    imul        ebp,edx 
    sar         ebx,6 
    mov         edx,dword ptr FLAT:L$633 
    add         ebx,dword ptr FLAT:L$636 
    sub         edx,dword ptr FLAT:L$635 
    shl         eax,8 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    sar         ebp,7 
    mov         dword ptr FLAT:L$635,edx 
    shr         edx,7 
    add         ebp,eax 
    add         ecx,dword ptr FLAT:L$619 
    mov         eax,ebp 
    adc         esi,dword ptr FLAT:L$621 
    imul        ebp,ebx 
    imul        eax,edx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
L$580:
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$581 
    dec         dword ptr FLAT:L$618 
    jne         L$579 
    mov         ebx,dword ptr FLAT:L$637 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$581:
    mov         ebx,dword ptr FLAT:L$637 
    test        byte ptr 1aH[ebx],2 
    je          L$583 
L$582:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$582 
    dec         dword ptr FLAT:L$618 
    jne         L$579 
    mov         dword ptr [ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 1cH[ebx],esi 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$583:
    mov         byte ptr 1aH[ebx],0 
    mov         dword ptr [ebx],0 
    mov         dword ptr 20H[ebx],0 
    mov         dword ptr 24H[ebx],0 
    cmp         dword ptr FLAT:L$618,1 
    jbe         L$584 
    mov         edx,edi 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    add         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         dword ptr [edx],eax 
    add         dword ptr 4[edx],ebp 
    mov         byte ptr 1bH[ebx],0 
    ret         
L$584:
    mov         byte ptr 1bH[ebx],1 
    ret         
    ret         
L$585:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$586 
L$586:
    xor         eax,eax 
    mov         ax,word ptr 18H[ebx] 
    xor         ecx,ecx 
    mov         cl,byte ptr 16H[ebx] 
    imul        eax,ecx 
    shr         eax,8 
    mov         ebp,eax 
    or          ax,word ptr 29H[ebx] 
    or          ax,word ptr 2dH[ebx] 
    je          L$567 
    xor         eax,eax 
    mov         al,byte ptr 17H[ebx] 
    mov         ecx,ebp 
    imul        ecx,eax 
    neg         eax 
    add         eax,0ffH 
    imul        ebp,eax 
    mov         dword ptr FLAT:L$633,ebp 
    mov         dword ptr FLAT:L$634,ecx 
    mov         esi,dword ptr [ebx] 
    shr         esi,1 
    mov         cx,word ptr 14H[ebx] 
    shl         ecx,10H 
    mov         eax,dword ptr 8[ebx] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[ebx] 
    sub         eax,dword ptr 4[ebx] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr [ebx] 
    cmp         eax,dword ptr 1cH[ebx] 
    je          L$587 
    mov         edx,dword ptr FLAT:L$633 
    mov         dword ptr FLAT:L$635,edx 
    mov         edx,dword ptr FLAT:L$634 
    mov         dword ptr FLAT:L$636,edx 
    mov         dword ptr FLAT:L$637,ebx 
    movsx       eax,word ptr [esi*2] 
    movsx       ebp,word ptr 2[esi*2] 
    mov         ebx,dword ptr FLAT:L$634 
    sub         ebp,eax 
    mov         edx,ecx 
    sub         ebx,dword ptr FLAT:L$636 
    shr         edx,11H 
    add         edi,8 
    imul        ebp,edx 
    sar         ebx,6 
    mov         edx,dword ptr FLAT:L$633 
    add         ebx,dword ptr FLAT:L$636 
    sub         edx,dword ptr FLAT:L$635 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    sar         ebp,0fH 
    mov         dword ptr FLAT:L$635,edx 
    shr         edx,7 
    add         ebp,eax 
    add         ecx,dword ptr FLAT:L$619 
    mov         eax,ebp 
    adc         esi,dword ptr FLAT:L$621 
    imul        ebp,ebx 
    imul        eax,edx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
    mov         ebx,dword ptr FLAT:L$637 
    mov         edx,dword ptr 20H[ebx] 
    mov         dword ptr FLAT:L$637,eax 
    sub         edx,eax 
    mov         eax,dword ptr FLAT:_judas_zladdbuffer 
    sub         eax,dword ptr FLAT:_judas_clipbuffer 
    add         dword ptr -8[eax+edi],edx 
    mov         edx,dword ptr 24H[ebx] 
    sub         edx,ebp 
    add         dword ptr -4[eax+edi],edx 
    mov         eax,dword ptr FLAT:L$637 
    mov         dword ptr FLAT:L$637,ebx 
    jmp         near ptr L$589 
L$587:
    mov         edx,dword ptr 28H[ebx] 
    mov         ebp,dword ptr 2cH[ebx] 
    mov         dword ptr FLAT:L$635,edx 
    mov         dword ptr FLAT:L$636,ebp 
    mov         dword ptr FLAT:L$637,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
    xchg        ebx,ebx 
L$588:
    movsx       eax,word ptr [esi*2] 
    movsx       ebp,word ptr 2[esi*2] 
    mov         ebx,dword ptr FLAT:L$634 
    sub         ebp,eax 
    mov         edx,ecx 
    sub         ebx,dword ptr FLAT:L$636 
    shr         edx,11H 
    add         edi,8 
    imul        ebp,edx 
    sar         ebx,6 
    mov         edx,dword ptr FLAT:L$633 
    add         ebx,dword ptr FLAT:L$636 
    sub         edx,dword ptr FLAT:L$635 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    sar         ebp,0fH 
    mov         dword ptr FLAT:L$635,edx 
    shr         edx,7 
    add         ebp,eax 
    add         ecx,dword ptr FLAT:L$619 
    mov         eax,ebp 
    adc         esi,dword ptr FLAT:L$621 
    imul        ebp,ebx 
    imul        eax,edx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
L$589:
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$590 
    dec         dword ptr FLAT:L$618 
    jne         L$588 
    mov         ebx,dword ptr FLAT:L$637 
    shl         esi,1 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$590:
    mov         ebx,dword ptr FLAT:L$637 
    test        byte ptr 1aH[ebx],2 
    je          L$592 
L$591:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$591 
    dec         dword ptr FLAT:L$618 
    jne         L$588 
    shl         esi,1 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$592:
    mov         byte ptr 1aH[ebx],0 
    mov         dword ptr [ebx],0 
    mov         dword ptr 20H[ebx],0 
    mov         dword ptr 24H[ebx],0 
    cmp         dword ptr FLAT:L$618,1 
    jbe         L$593 
    mov         edx,edi 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    add         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         dword ptr [edx],eax 
    add         dword ptr 4[edx],ebp 
    mov         byte ptr 1bH[ebx],0 
    ret         
L$593:
    mov         byte ptr 1bH[ebx],1 
    ret         
L$594:
    ret         
L$595:
    mov         ebx,dword ptr FLAT:L$627 
    mov         al,byte ptr 1aH[ebx] 
    test        al,1 
    jne         L$596 
    cmp         al,byte ptr 1bH[ebx] 
    je          L$615 
    mov         byte ptr 1bH[ebx],al 
    mov         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         edx,dword ptr FLAT:L$628 
    mov         eax,dword ptr 20H[ebx] 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    mov         dword ptr 20H[ebx],0 
    add         dword ptr [edx],eax 
    mov         eax,dword ptr 24H[ebx] 
    mov         dword ptr 24H[ebx],0 
    add         dword ptr 4[edx],eax 
    jmp         near ptr L$615 
L$596:
    mov         byte ptr 1bH[ebx],al 
    mov         eax,dword ptr 10H[ebx] 
    cmp         eax,82ac0H 
    jbe         L$597 
    mov         eax,82ac0H 
L$597:
    mov         edx,eax 
    shr         edx,10H 
    shl         eax,10H 
    div         dword ptr FLAT:_judas_mixrate 
    mov         word ptr FLAT:L$620,ax 
    shr         eax,10H 
    mov         dword ptr FLAT:L$621,eax 
    test        byte ptr 1aH[ebx],4 
    jne         L$606 
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$598 
L$598:
    xor         eax,eax 
    mov         ax,word ptr 18H[ebx] 
    xor         ecx,ecx 
    mov         cl,byte ptr 16H[ebx] 
    imul        eax,ecx 
    shr         eax,8 
    mov         ebp,eax 
    or          ax,word ptr 29H[ebx] 
    or          ax,word ptr 2dH[ebx] 
    je          L$567 
    xor         eax,eax 
    mov         al,byte ptr 17H[ebx] 
    mov         ecx,ebp 
    imul        ecx,eax 
    neg         eax 
    add         eax,0ffH 
    imul        ebp,eax 
    mov         dword ptr FLAT:L$633,ebp 
    mov         dword ptr FLAT:L$634,ecx 
    mov         esi,dword ptr [ebx] 
    mov         cx,word ptr 14H[ebx] 
    shl         ecx,10H 
    mov         eax,dword ptr 8[ebx] 
    mov         dword ptr FLAT:L$622,eax 
    sub         eax,dword ptr 4[ebx] 
    mov         dword ptr FLAT:L$623,eax 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr [ebx] 
    cmp         eax,dword ptr 1cH[ebx] 
    je          L$599 
    mov         edx,dword ptr FLAT:L$633 
    mov         dword ptr FLAT:L$635,edx 
    mov         edx,dword ptr FLAT:L$634 
    mov         dword ptr FLAT:L$636,edx 
    mov         dword ptr FLAT:L$637,ebx 
    movsx       ebp,byte ptr -1[esi] 
    movsx       edx,byte ptr 1[esi] 
    movsx       ebx,byte ptr 2[esi] 
    movsx       eax,byte ptr [esi] 
    shl         ebx,8 
    shl         edx,8 
    mov         dword ptr FLAT:L$632,ebx 
    shl         eax,8 
    mov         dword ptr FLAT:L$631,edx 
    mov         ebx,eax 
    sub         eax,edx 
    shl         ebp,8 
    mov         dword ptr FLAT:L$630,ebp 
    lea         eax,[edx+eax*4] 
    mov         edx,ecx 
    sub         eax,ebx 
    shr         edx,13H 
    sub         eax,ebp 
    add         eax,dword ptr FLAT:L$632 
    lea         ebp,[ebx+ebx*4] 
    imul        eax,edx 
    sar         eax,0eH 
    add         ebp,dword ptr FLAT:L$632 
    sar         ebp,1 
    add         eax,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$631 
    add         edi,8 
    sub         eax,ebp 
    mov         ebp,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$630 
    sub         ebp,dword ptr FLAT:L$630 
    imul        eax,edx 
    sar         ebp,1 
    sar         eax,0dH 
    add         ecx,dword ptr FLAT:L$619 
    adc         esi,dword ptr FLAT:L$621 
    add         eax,ebp 
    imul        eax,edx 
    sar         eax,0dH 
    mov         edx,dword ptr FLAT:L$633 
    add         eax,ebx 
    mov         ebx,dword ptr FLAT:L$634 
    sub         edx,dword ptr FLAT:L$635 
    sub         ebx,dword ptr FLAT:L$636 
    sar         ebx,6 
    add         ebx,dword ptr FLAT:L$636 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    mov         dword ptr FLAT:L$635,edx 
    mov         ebp,eax 
    shr         edx,7 
    imul        eax,edx 
    imul        ebp,ebx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
    mov         ebx,dword ptr FLAT:L$637 
    mov         edx,dword ptr 20H[ebx] 
    mov         dword ptr FLAT:L$637,eax 
    sub         edx,eax 
    mov         eax,dword ptr FLAT:_judas_zladdbuffer 
    sub         eax,dword ptr FLAT:_judas_clipbuffer 
    add         dword ptr -8[eax+edi],edx 
    mov         edx,dword ptr 24H[ebx] 
    sub         edx,ebp 
    add         dword ptr -4[eax+edi],edx 
    mov         eax,dword ptr FLAT:L$637 
    mov         dword ptr FLAT:L$637,ebx 
    jmp         near ptr L$601 
L$599:
    mov         edx,dword ptr 28H[ebx] 
    mov         ebp,dword ptr 2cH[ebx] 
    mov         dword ptr FLAT:L$635,edx 
    mov         dword ptr FLAT:L$636,ebp 
    mov         dword ptr FLAT:L$637,ebx 
    nop         
L$600:
    movsx       ebp,byte ptr -1[esi] 
    movsx       edx,byte ptr 1[esi] 
    movsx       ebx,byte ptr 2[esi] 
    movsx       eax,byte ptr [esi] 
    shl         ebx,8 
    shl         edx,8 
    mov         dword ptr FLAT:L$632,ebx 
    shl         eax,8 
    mov         dword ptr FLAT:L$631,edx 
    mov         ebx,eax 
    sub         eax,edx 
    shl         ebp,8 
    mov         dword ptr FLAT:L$630,ebp 
    lea         eax,[edx+eax*4] 
    mov         edx,ecx 
    sub         eax,ebx 
    shr         edx,13H 
    sub         eax,ebp 
    add         eax,dword ptr FLAT:L$632 
    lea         ebp,[ebx+ebx*4] 
    imul        eax,edx 
    sar         eax,0eH 
    add         ebp,dword ptr FLAT:L$632 
    sar         ebp,1 
    add         eax,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$631 
    add         edi,8 
    sub         eax,ebp 
    mov         ebp,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$630 
    sub         ebp,dword ptr FLAT:L$630 
    imul        eax,edx 
    sar         ebp,1 
    sar         eax,0dH 
    add         ecx,dword ptr FLAT:L$619 
    adc         esi,dword ptr FLAT:L$621 
    add         eax,ebp 
    imul        eax,edx 
    sar         eax,0dH 
    mov         edx,dword ptr FLAT:L$633 
    add         eax,ebx 
    mov         ebx,dword ptr FLAT:L$634 
    sub         edx,dword ptr FLAT:L$635 
    sub         ebx,dword ptr FLAT:L$636 
    sar         ebx,6 
    add         ebx,dword ptr FLAT:L$636 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    mov         dword ptr FLAT:L$635,edx 
    mov         ebp,eax 
    shr         edx,7 
    imul        eax,edx 
    imul        ebp,ebx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
L$601:
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$602 
    dec         dword ptr FLAT:L$618 
    jne         L$600 
    mov         ebx,dword ptr FLAT:L$637 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$602:
    mov         ebx,dword ptr FLAT:L$637 
    test        byte ptr 1aH[ebx],2 
    je          L$604 
L$603:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$603 
    dec         dword ptr FLAT:L$618 
    jne         L$600 
    mov         dword ptr [ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 1cH[ebx],esi 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$604:
    mov         byte ptr 1aH[ebx],0 
    mov         dword ptr [ebx],0 
    mov         dword ptr 20H[ebx],0 
    mov         dword ptr 24H[ebx],0 
    cmp         dword ptr FLAT:L$618,1 
    jbe         L$605 
    mov         edx,edi 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    add         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         dword ptr [edx],eax 
    add         dword ptr 4[edx],ebp 
    mov         byte ptr 1bH[ebx],0 
    ret         
L$605:
    mov         byte ptr 1bH[ebx],1 
    ret         
    ret         
L$606:
    test        byte ptr FLAT:_judas_mixmode,1 
    je          L$607 
L$607:
    xor         eax,eax 
    mov         ax,word ptr 18H[ebx] 
    xor         ecx,ecx 
    mov         cl,byte ptr 16H[ebx] 
    imul        eax,ecx 
    shr         eax,8 
    mov         ebp,eax 
    or          ax,word ptr 29H[ebx] 
    or          ax,word ptr 2dH[ebx] 
    je          L$567 
    xor         eax,eax 
    mov         al,byte ptr 17H[ebx] 
    mov         ecx,ebp 
    imul        ecx,eax 
    neg         eax 
    add         eax,0ffH 
    imul        ebp,eax 
    mov         dword ptr FLAT:L$633,ebp 
    mov         dword ptr FLAT:L$634,ecx 
    mov         esi,dword ptr [ebx] 
    shr         esi,1 
    mov         cx,word ptr 14H[ebx] 
    shl         ecx,10H 
    mov         eax,dword ptr 8[ebx] 
    shr         eax,1 
    mov         dword ptr FLAT:L$622,eax 
    mov         eax,dword ptr 8[ebx] 
    sub         eax,dword ptr 4[ebx] 
    shr         eax,1 
    mov         dword ptr FLAT:L$623,eax 
    mov         edi,dword ptr FLAT:L$628 
    mov         eax,dword ptr FLAT:L$624 
    mov         dword ptr FLAT:L$618,eax 
    mov         eax,dword ptr [ebx] 
    cmp         eax,dword ptr 1cH[ebx] 
    je          L$608 
    mov         edx,dword ptr FLAT:L$633 
    mov         dword ptr FLAT:L$635,edx 
    mov         edx,dword ptr FLAT:L$634 
    mov         dword ptr FLAT:L$636,edx 
    mov         dword ptr FLAT:L$637,ebx 
    movsx       ebp,word ptr -2[esi*2] 
    movsx       eax,word ptr [esi*2] 
    movsx       ebx,word ptr 4[esi*2] 
    movsx       edx,word ptr 2[esi*2] 
    mov         dword ptr FLAT:L$632,ebx 
    mov         dword ptr FLAT:L$631,edx 
    mov         ebx,eax 
    sub         eax,edx 
    mov         dword ptr FLAT:L$630,ebp 
    lea         eax,[edx+eax*4] 
    mov         edx,ecx 
    sub         eax,ebx 
    shr         edx,13H 
    sub         eax,ebp 
    add         eax,dword ptr FLAT:L$632 
    lea         ebp,[ebx+ebx*4] 
    imul        eax,edx 
    sar         eax,0eH 
    add         ebp,dword ptr FLAT:L$632 
    sar         ebp,1 
    add         eax,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$631 
    add         edi,8 
    sub         eax,ebp 
    mov         ebp,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$630 
    sub         ebp,dword ptr FLAT:L$630 
    imul        eax,edx 
    sar         ebp,1 
    sar         eax,0dH 
    add         ecx,dword ptr FLAT:L$619 
    adc         esi,dword ptr FLAT:L$621 
    add         eax,ebp 
    imul        eax,edx 
    sar         eax,0dH 
    mov         edx,dword ptr FLAT:L$633 
    add         eax,ebx 
    mov         ebx,dword ptr FLAT:L$634 
    sub         edx,dword ptr FLAT:L$635 
    sub         ebx,dword ptr FLAT:L$636 
    sar         ebx,6 
    add         ebx,dword ptr FLAT:L$636 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    mov         dword ptr FLAT:L$635,edx 
    mov         ebp,eax 
    shr         edx,7 
    imul        eax,edx 
    imul        ebp,ebx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
    mov         ebx,dword ptr FLAT:L$637 
    mov         edx,dword ptr 20H[ebx] 
    mov         dword ptr FLAT:L$637,eax 
    sub         edx,eax 
    mov         eax,dword ptr FLAT:_judas_zladdbuffer 
    sub         eax,dword ptr FLAT:_judas_clipbuffer 
    add         dword ptr -8[eax+edi],edx 
    mov         edx,dword ptr 24H[ebx] 
    sub         edx,ebp 
    add         dword ptr -4[eax+edi],edx 
    mov         eax,dword ptr FLAT:L$637 
    mov         dword ptr FLAT:L$637,ebx 
    jmp         near ptr L$610 
L$608:
    mov         edx,dword ptr 28H[ebx] 
    mov         ebp,dword ptr 2cH[ebx] 
    mov         dword ptr FLAT:L$635,edx 
    mov         dword ptr FLAT:L$636,ebp 
    mov         dword ptr FLAT:L$637,ebx 
    nop         
L$609:
    movsx       ebp,word ptr -2[esi*2] 
    movsx       eax,word ptr [esi*2] 
    movsx       ebx,word ptr 4[esi*2] 
    movsx       edx,word ptr 2[esi*2] 
    mov         dword ptr FLAT:L$632,ebx 
    mov         dword ptr FLAT:L$631,edx 
    mov         ebx,eax 
    sub         eax,edx 
    mov         dword ptr FLAT:L$630,ebp 
    lea         eax,[edx+eax*4] 
    mov         edx,ecx 
    sub         eax,ebx 
    shr         edx,13H 
    sub         eax,ebp 
    add         eax,dword ptr FLAT:L$632 
    lea         ebp,[ebx+ebx*4] 
    imul        eax,edx 
    sar         eax,0eH 
    add         ebp,dword ptr FLAT:L$632 
    sar         ebp,1 
    add         eax,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$631 
    add         edi,8 
    sub         eax,ebp 
    mov         ebp,dword ptr FLAT:L$631 
    add         eax,dword ptr FLAT:L$630 
    sub         ebp,dword ptr FLAT:L$630 
    imul        eax,edx 
    sar         ebp,1 
    sar         eax,0dH 
    add         ecx,dword ptr FLAT:L$619 
    adc         esi,dword ptr FLAT:L$621 
    add         eax,ebp 
    imul        eax,edx 
    sar         eax,0dH 
    mov         edx,dword ptr FLAT:L$633 
    add         eax,ebx 
    mov         ebx,dword ptr FLAT:L$634 
    sub         edx,dword ptr FLAT:L$635 
    sub         ebx,dword ptr FLAT:L$636 
    sar         ebx,6 
    add         ebx,dword ptr FLAT:L$636 
    sar         edx,6 
    mov         dword ptr FLAT:L$636,ebx 
    shr         ebx,7 
    add         edx,dword ptr FLAT:L$635 
    mov         dword ptr FLAT:L$635,edx 
    mov         ebp,eax 
    shr         edx,7 
    imul        eax,edx 
    imul        ebp,ebx 
    add         dword ptr -8[edi],eax 
    add         dword ptr -4[edi],ebp 
L$610:
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$611 
    dec         dword ptr FLAT:L$618 
    jne         L$609 
    mov         ebx,dword ptr FLAT:L$637 
    shl         esi,1 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$611:
    mov         ebx,dword ptr FLAT:L$637 
    test        byte ptr 1aH[ebx],2 
    je          L$613 
L$612:
    sub         esi,dword ptr FLAT:L$623 
    cmp         esi,dword ptr FLAT:L$622 
    jae         L$612 
    dec         dword ptr FLAT:L$618 
    jne         L$609 
    shl         esi,1 
    mov         dword ptr [ebx],esi 
    mov         dword ptr 1cH[ebx],esi 
    shr         ecx,10H 
    mov         word ptr 14H[ebx],cx 
    mov         dword ptr 20H[ebx],eax 
    mov         dword ptr 24H[ebx],ebp 
    mov         eax,dword ptr FLAT:L$635 
    mov         ebp,dword ptr FLAT:L$636 
    mov         dword ptr 28H[ebx],eax 
    mov         dword ptr 2cH[ebx],ebp 
    ret         
L$613:
    mov         byte ptr 1aH[ebx],0 
    mov         dword ptr [ebx],0 
    mov         dword ptr 20H[ebx],0 
    mov         dword ptr 24H[ebx],0 
    cmp         dword ptr FLAT:L$618,1 
    jbe         L$614 
    mov         edx,edi 
    sub         edx,dword ptr FLAT:_judas_clipbuffer 
    add         edx,dword ptr FLAT:_judas_zladdbuffer 
    add         dword ptr [edx],eax 
    add         dword ptr 4[edx],ebp 
    mov         byte ptr 1bH[ebx],0 
    ret         
L$614:
    mov         byte ptr 1bH[ebx],1 
    ret         
L$615:
    ret         
safemixer_:
    cmp         dword ptr FLAT:_judas_mixersys,0 
    je          L$616 
    cmp         byte ptr FLAT:_judas_initialized,0 
    je          L$616 
    pushad      
    call        dword ptr FLAT:_judas_mixersys 
    popad       
L$616:
    ret         
judas_code_lock_end_:
_TEXT		ENDS
_DATA		SEGMENT	DWORD PUBLIC USE32 'DATA'
L$617:
    DB	0FH DUP(0,0,0,0,0,0,0,0)
    DB	0, 0, 0, 0, 0, 0, 0, 0
L$618:
    DB	0, 0, 0, 0
L$619:
    DB	0, 0
L$620:
    DB	0, 0
L$621:
    DB	0, 0, 0, 0
L$622:
    DB	0, 0, 0, 0
L$623:
    DB	0, 0, 0, 0
L$624:
    DB	0, 0, 0, 0
L$625:
    DB	0, 0, 0, 0
L$626:
    DB	0, 0, 0, 0
L$627:
    DB	0, 0, 0, 0
L$628:
    DB	0, 0, 0, 0
L$629:
    DB	0, 0, 0, 0
L$630:
    DB	0, 0, 0, 0, 0, 0, 0, 0
L$631:
    DB	0, 0, 0, 0
L$632:
    DB	0, 0, 0, 0
L$633:
    DB	0, 0, 0, 0
L$634:
    DB	0, 0, 0, 0
L$635:
    DB	0, 0, 0, 0
L$636:
    DB	0, 0, 0, 0
L$637:
    DB	0, 0, 0, 0
L$638:
    DB	0
L$639:
    DB	0

_DATA		ENDS
CONST		SEGMENT	DWORD PUBLIC USE32 'DATA'
L$640:
    DB	87H, 0, 0, 0, 1, 0, 0aH, 0
    DB	0bH, 0, 0cH, 0, 4, 0, 0, 0
    DB	83H, 0, 2, 0, 3, 0, 0aH, 0
    DB	0bH, 0, 0cH, 0, 5, 1, 0, 0
    DB	81H, 0, 4, 0, 5, 0, 0aH, 0
    DB	0bH, 0, 0cH, 0, 6, 2, 0, 0
    DB	82H, 0, 6, 0, 7, 0, 0aH, 0
    DB	0bH, 0, 0cH, 0, 7, 3, 0, 0
    DB	8fH, 0, 0c0H, 0, 0c2H, 0, 0d4H, 0
    DB	0d6H, 0, 0d8H, 0, 4, 0, 0, 0
    DB	8bH, 0, 0c4H, 0, 0c6H, 0, 0d4H, 0
    DB	0d6H, 0, 0d8H, 0, 5, 1, 0, 0
    DB	89H, 0, 0c8H, 0, 0caH, 0, 0d4H, 0
    DB	0d6H, 0, 0d8H, 0, 6, 2, 0, 0
    DB	8aH, 0, 0ccH, 0, 0ceH, 0, 0d4H, 0
    DB	0d6H, 0, 0d8H, 0, 7, 3, 0, 0
L$641:
    DB	0, 0, 0, 0, 3cH, 0, 0, 0
    DB	38H, 0, 0, 0, 34H, 0, 0, 0
    DB	30H, 0, 0, 0, 2cH, 0, 0, 0
    DB	28H, 0, 0, 0, 24H, 0, 0, 0
    DB	20H, 0, 0, 0, 1cH, 0, 0, 0
    DB	18H, 0, 0, 0, 14H, 0, 0, 0
    DB	10H, 0, 0, 0, 0cH, 0, 0, 0
    DB	8, 0, 0, 0, 4, 0, 0, 0

CONST		ENDS
		END
